[{"/Users/jean/Desktop/hackaton/client/src/index.js":"1","/Users/jean/Desktop/hackaton/client/src/reportWebVitals.js":"2","/Users/jean/Desktop/hackaton/client/src/App.js":"3","/Users/jean/Desktop/hackaton/client/src/components/Home/Home.js":"4","/Users/jean/Desktop/hackaton/client/src/components/Board/Board.js":"5"},{"size":500,"mtime":1610539097194,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1610539097195,"results":"8","hashOfConfig":"7"},{"size":250,"mtime":1610566022302,"results":"9","hashOfConfig":"7"},{"size":139,"mtime":1610564867289,"results":"10","hashOfConfig":"7"},{"size":1873,"mtime":1610566022304,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1ws952",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},"/Users/jean/Desktop/hackaton/client/src/index.js",[],["24","25"],"/Users/jean/Desktop/hackaton/client/src/reportWebVitals.js",[],"/Users/jean/Desktop/hackaton/client/src/App.js",["26"],"/Users/jean/Desktop/hackaton/client/src/components/Home/Home.js",[],"/Users/jean/Desktop/hackaton/client/src/components/Board/Board.js",["27","28","29"],"import React, { useState, useEffect } from 'react';\nimport './Board.scss';\nimport avatar from '../../avatar.jpeg';\n\nexport const createEmptyBoard = () => {\n  const BOARD_SIZE = 10;\n  const board = new Array(BOARD_SIZE);\n\n  for (let x = 0; x < BOARD_SIZE; x++) {\n    board[x] = new Array(BOARD_SIZE);\n    for (let y = 0; y < BOARD_SIZE; y++) {\n      board[x][y] = {\n        x,\n        y,\n        isPeople: false,\n        isWall: false,\n      };\n    }\n  }\n  return board;\n};\n\nexport const drawBoard = (board) => {\n  return board.map((row) => {\n    return row.map((cell, index) => {\n      return (\n        <div key={index} className={cell.isWall ? 'wall' : 'cell'}>\n          {cell.isPeople && <img src={avatar} alt='avatar' />}\n        </div>\n      );\n    });\n  });\n};\n\nexport const populateWithWall = (board, wall) => {\n  board.forEach((row) => {\n    row.forEach((cell) => {\n      wall.forEach((wCell) => {\n        if (wCell.x === cell.x && wCell.y === cell.y) {\n          return (cell.isWall = true);\n        }\n      });\n    });\n  });\n};\nexport const populateWithPeople = (board, people) => {\n  board.forEach((row) => {\n    row.forEach((cell) => {\n      people.forEach((p) => {\n        if (p.x === cell.x && p.y === cell.y) {\n          return (cell.isPeople = true);\n        }\n      });\n    });\n  });\n};\n\nexport const createBoard = (wall, people) => {\n  const b = createEmptyBoard();\n  populateWithWall(b, wall);\n  populateWithPeople(b, people);\n  return b;\n};\n\nexport const wall = [\n  { x: 0, y: 4 },\n  { x: 1, y: 4 },\n  { x: 3, y: 0 },\n  { x: 3, y: 1 },\n  { x: 3, y: 2 },\n  { x: 5, y: 9 },\n  { x: 5, y: 8 },\n];\n\nconst Board = () => {\n  const [users, setUsers] = useState([{ x: 0, y: 1 }]);\n  const [board, setBoard] = useState(createBoard(wall, users));\n  console.log(board);\n\n  return <div className='board-container'>{drawBoard(board)}</div>;\n};\n\nexport default Board;\n",{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":4,"column":8,"nodeType":"36","messageId":"37","endLine":4,"endColumn":12},{"ruleId":"34","severity":1,"message":"38","line":1,"column":27,"nodeType":"36","messageId":"37","endLine":1,"endColumn":36},{"ruleId":"34","severity":1,"message":"39","line":76,"column":17,"nodeType":"36","messageId":"37","endLine":76,"endColumn":25},{"ruleId":"34","severity":1,"message":"40","line":77,"column":17,"nodeType":"36","messageId":"37","endLine":77,"endColumn":25},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"no-unused-vars","'Home' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'setUsers' is assigned a value but never used.","'setBoard' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]