[{"/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/index.js":"1","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/App.js":"2","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/reportWebVitals.js":"3","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Home/Home.js":"4","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/context/UserContext.js":"5","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Board/Board.js":"6","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Board/Cell.js":"7","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Home/Upload.js":"8","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Home/Background.js":"9","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Home/Modal.js":"10","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Home/SoundEffectContext.js":"11","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Action/Action.js":"12"},{"size":449,"mtime":1610654212582,"results":"13","hashOfConfig":"14"},{"size":752,"mtime":1610672055878,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1610642516802,"results":"16","hashOfConfig":"14"},{"size":402,"mtime":1610658764057,"results":"17","hashOfConfig":"14"},{"size":840,"mtime":1610671314742,"results":"18","hashOfConfig":"14"},{"size":6120,"mtime":1610671737936,"results":"19","hashOfConfig":"14"},{"size":1118,"mtime":1610671314741,"results":"20","hashOfConfig":"14"},{"size":3263,"mtime":1610658764061,"results":"21","hashOfConfig":"14"},{"size":239,"mtime":1610654212580,"results":"22","hashOfConfig":"14"},{"size":412,"mtime":1610642569195,"results":"23","hashOfConfig":"14"},{"size":478,"mtime":1610658764061,"results":"24","hashOfConfig":"14"},{"size":1226,"mtime":1610673981374,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1ialoog",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/index.js",[],["54","55"],"/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/App.js",[],"/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/reportWebVitals.js",[],"/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Home/Home.js",[],"/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/context/UserContext.js",[],"/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Board/Board.js",["56","57","58","59","60","61","62","63","64","65"],"import React, { useState, useContext, useEffect, useRef } from 'react';\nimport './Board.scss';\nimport avatar from '../../avatar.jpeg';\nimport io from 'socket.io-client';\nimport uuid from 'react-uuid';\nimport Cell from './Cell';\nimport Background from '../Home/Background';\nimport Action from '../Action/Action';\n\nimport { UserContext } from '../../context/UserContext';\n// import Action from '../Action/Action';\n\nexport const createEmptyBoard = () => {\n  const BOARD_SIZE = 10;\n  const board = new Array(BOARD_SIZE);\n\n  for (let x = 0; x < BOARD_SIZE; x++) {\n    board[x] = new Array(BOARD_SIZE);\n    for (let y = 0; y < BOARD_SIZE; y++) {\n      board[x][y] = {\n        x,\n        y,\n        isPeople: false,\n        isWall: false,\n        isCoffee: false,\n        isComputer: false,\n        isDesk: false,\n        isTree: false,\n      };\n    }\n  }\n  return board;\n};\nexport const handleClassname = (cell) => {\n  if (cell.isWall === true) {\n    return 'wall';\n  } else if (cell.isCoffee === true) {\n    return 'coffee';\n  } else if (cell.isComputer === true) {\n    return 'computer';\n  } else if (cell.isDesk === true) {\n    return 'desk';\n  } else if (cell.isTree === true) {\n    return 'tree';\n  } else {\n    return 'cell';\n  }\n};\n\nexport const drawBoard = (board, user) => {\n  return board.map((row) => {\n    return row.map((cell, index) => {\n      return (\n        <Cell\n          key={index}\n          cellStyle={cell.isWall ? 'wall' : 'cell'}\n          isPlayer={cell.isPeople}\n          cell={cell}\n          // handleClassname={handleClassname}\n        />\n      );\n    });\n  });\n};\nexport const populateWithTree = (board, tree) => {\n  board.forEach((row) => {\n    row.forEach((cell) => {\n      tree.forEach((wCell) => {\n        if (wCell.x === cell.x && wCell.y === cell.y) {\n          return (cell.isTree = true);\n        }\n      });\n    });\n  });\n};\nexport const populateWithDesk = (board, desk) => {\n  board.forEach((row) => {\n    row.forEach((cell) => {\n      desk.forEach((wCell) => {\n        if (wCell.x === cell.x && wCell.y === cell.y) {\n          return (cell.isDesk = true);\n        }\n      });\n    });\n  });\n};\nexport const populateWithComputer = (board, computer) => {\n  board.forEach((row) => {\n    row.forEach((cell) => {\n      computer.forEach((wCell) => {\n        if (wCell.x === cell.x && wCell.y === cell.y) {\n          return (cell.isComputer = true);\n        }\n      });\n    });\n  });\n};\nexport const populateWithCoffee = (board, coffee) => {\n  board.forEach((row) => {\n    row.forEach((cell) => {\n      coffee.forEach((wCell) => {\n        if (wCell.x === cell.x && wCell.y === cell.y) {\n          return (cell.isCoffee = true);\n        }\n      });\n    });\n  });\n};\nexport const populateWithWall = (board, wall) => {\n  board.forEach((row) => {\n    row.forEach((cell) => {\n      wall.forEach((wCell) => {\n        if (wCell.x === cell.x && wCell.y === cell.y) {\n          return (cell.isWall = true);\n        }\n      });\n    });\n  });\n};\nexport const populateWithPeople = (board, people) => {\n  if (people) {\n    board.forEach((row) => {\n      row.forEach((cell) => {\n        people.forEach((p) => {\n          if (cell && p) {\n            if (p.x === cell.x && p.y === cell.y) {\n              cell.isPeople = true;\n              cell.avatar = p.avatar;\n              cell.user = p;\n              return cell;\n            }\n          }\n        });\n      });\n    });\n  }\n};\nexport const createBoard = (tree, desk, computer, coffee, wall, people) => {\n  const b = createEmptyBoard();\n  populateWithTree(b, tree);\n  populateWithDesk(b, desk);\n  populateWithComputer(b, computer);\n  populateWithCoffee(b, coffee);\n  populateWithWall(b, wall);\n  populateWithPeople(b, people);\n  return b;\n};\n\nexport const wall = [\n  { x: 0, y: 6 },\n  { x: 1, y: 6 },\n  { x: 3, y: 6 },\n  { x: 3, y: 7 },\n  { x: 3, y: 8 },\n  { x: 3, y: 9 },\n  { x: 2, y: 0 },\n  { x: 2, y: 1 },\n  { x: 2, y: 2 },\n  { x: 2, y: 3 },\n  { x: 3, y: 3 },\n  { x: 4, y: 3 },\n  { x: 7, y: 5 },\n  { x: 8, y: 5 },\n  { x: 9, y: 5 },\n];\n\nexport const coffee = [{ x: 3, y: 1 }];\n\nexport const computer = [{ x: 0, y: 8 }];\nexport const desk = [\n  { x: 7, y: 1 },\n  { x: 7, y: 3 },\n  { x: 9, y: 1 },\n  { x: 9, y: 3 },\n];\n\nexport const tree = [\n  { x: 0, y: 5 },\n  { x: 4, y: 9 },\n  { x: 7, y: 6 },\n  { x: 8, y: 9 },\n  { x: 9, y: 7 },\n];\n\nconst Board = () => {\n  const {\n    users,\n    setUsers,\n    currentUser,\n    setCurrentUser,\n    isActionOpen,\n    setIsActionopen,\n    socket,\n  } = useContext(UserContext);\n\n  const initialBoard = createBoard(tree, desk, computer, coffee, wall, users);\n\n  const [board, setBoard] = useState(initialBoard);\n  const [userID, setUserID] = useState();\n  const socketRef = useRef();\n  useEffect(() => {\n    const newBoard = createBoard(tree, desk, computer, coffee, wall, users);\n    setBoard(newBoard);\n  }, [users]);\n\n  // const socketRef = useRef();\n  // socket = io.connect('/');\n\n  useEffect(() => {\n    let usersRegistered = [];\n    socket.emit('sendCurrentUser', currentUser);\n\n    socket.on('connect', () => {});\n\n    socket.on('sendNewUser', (newUser) => {\n      const userAlreadyExist = usersRegistered.some(\n        (user) => user.id === newUser.id\n      );\n\n      if (!userAlreadyExist) {\n        usersRegistered.push(newUser);\n        setUsers((prevState) => [...prevState, newUser]);\n      }\n      socket.emit('clientSendFirstUser', currentUser);\n    });\n\n    socket.on('serverSendFirstUser', (newUser) => {\n      const userAlreadyExist = usersRegistered.some(\n        (user) => user.id === newUser.id\n      );\n\n      if (!userAlreadyExist) {\n        usersRegistered.push(newUser);\n        setUsers((prevState) => [...prevState, newUser]);\n      }\n    });\n\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n\n  useEffect(() => {\n    socket.on('otherUserMove', (data) => {\n      setUsers((users) => {\n        return [...users.filter((user) => user.id !== data.id), data];\n      });\n    });\n  }, []);\n\n  return (\n    <div>\n      <Background />\n      {isActionOpen && <Action />}\n\n      <div className='board-container'>{drawBoard(board, users)}</div>\n    </div>\n  );\n};\nexport default Board;\n","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Board/Cell.js",["66","67","68","69"],"import React, { useContext, useEffect } from 'react';\nimport { UserContext } from '../../context/UserContext';\nimport { handleClassname } from './Board';\n\nexport default function Cell(props) {\n  const { isPlayer, cell } = props;\n  const { users, setUsers, currentUser, setCurrentUser, socket } = useContext(\n    UserContext\n  );\n  let newCurrentUser = {};\n  const handleClick = (e) => {\n    console.log(cell.isCoffee);\n    const userIndex = users.findIndex((user) => user.id === currentUser.id);\n    console.log(userIndex);\n    newCurrentUser = {\n      // eslint-disable-next-line no-restricted-globals\n      name: users[userIndex].name,\n      avatar: users[userIndex].avatar,\n      id: users[userIndex].id,\n      x: cell.x,\n      y: cell.y,\n    };\n    if (cell.isCoffee) {\n      return 'coffeeAction';\n    }\n\n    socket.emit('currentUserMove', newCurrentUser);\n  };\n  return (\n    <div className={cell && handleClassname(cell)} onClick={handleClick}>\n      {isPlayer && <img src={cell.avatar} alt='avatar' />}\n    </div>\n  );\n}\n","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Home/Upload.js",["70"],"import React, { useState, useContext } from 'react';\n/* import Modal from './Modal'; */\nimport './Upload.scss';\nimport axios from 'axios';\nimport { UserContext } from '../../context/UserContext';\nimport { Link } from 'react-router-dom';\n\nconst Upload = () => {\n  const [title, setTitle] = useState('Enter your Name');\n  const [mainPicture, setMainPicture] = useState(null);\n\n  const { users, setUsers } = useContext(UserContext);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append('title', title);\n    formData.append('main_picture', mainPicture);\n\n    const res = await axios.post(\n      'http://localhost:5000/uploaddufichier',\n      formData\n    );\n    await setUsers([\n      {\n        name: res.data.name,\n        avatar: `http://localhost:5000/${res.data.path}`,\n        x: Math.floor(Math.random() * 10),\n        y: Math.floor(Math.random() * 10),\n      },\n    ]);\n  };\n\n  return (\n    <div>\n      <h2>Welcome On Board !</h2>\n      <form onSubmit={handleSubmit}>\n        <input\n          type='text'\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n        />\n        <br />\n        <p>Select your picture</p>\n        <input\n          type='file'\n          onChange={(e) => setMainPicture(e.target.files[0])}\n        />\n        <br />\n        <input type='submit' value='Create Your Avatar' />\n        <p>how does it work ?</p>\n      </form>\n      <Link to='/board'>Join</Link>\n    </div>\n  );\n};\n\nexport default Upload;\n","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Home/Background.js",[],"/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Home/Modal.js",[],"/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Home/SoundEffectContext.js",[],"/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Action/Action.js",["71","72","73"],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":3,"column":8,"nodeType":"80","messageId":"81","endLine":3,"endColumn":14},{"ruleId":"78","severity":1,"message":"82","line":4,"column":8,"nodeType":"80","messageId":"81","endLine":4,"endColumn":10},{"ruleId":"78","severity":1,"message":"83","line":5,"column":8,"nodeType":"80","messageId":"81","endLine":5,"endColumn":12},{"ruleId":"78","severity":1,"message":"84","line":190,"column":5,"nodeType":"80","messageId":"81","endLine":190,"endColumn":19},{"ruleId":"78","severity":1,"message":"85","line":192,"column":5,"nodeType":"80","messageId":"81","endLine":192,"endColumn":20},{"ruleId":"78","severity":1,"message":"86","line":199,"column":10,"nodeType":"80","messageId":"81","endLine":199,"endColumn":16},{"ruleId":"78","severity":1,"message":"87","line":199,"column":18,"nodeType":"80","messageId":"81","endLine":199,"endColumn":27},{"ruleId":"78","severity":1,"message":"88","line":200,"column":9,"nodeType":"80","messageId":"81","endLine":200,"endColumn":18},{"ruleId":"89","severity":1,"message":"90","line":241,"column":6,"nodeType":"91","endLine":241,"endColumn":8,"suggestions":"92"},{"ruleId":"89","severity":1,"message":"93","line":249,"column":6,"nodeType":"91","endLine":249,"endColumn":8,"suggestions":"94"},{"ruleId":"78","severity":1,"message":"95","line":1,"column":29,"nodeType":"80","messageId":"81","endLine":1,"endColumn":38},{"ruleId":"78","severity":1,"message":"96","line":9,"column":5,"nodeType":"80","messageId":"81","endLine":9,"endColumn":13},{"ruleId":"78","severity":1,"message":"84","line":11,"column":5,"nodeType":"80","messageId":"81","endLine":11,"endColumn":19},{"ruleId":"78","severity":1,"message":"97","line":12,"column":5,"nodeType":"80","messageId":"81","endLine":12,"endColumn":17},{"ruleId":"78","severity":1,"message":"98","line":12,"column":11,"nodeType":"80","messageId":"81","endLine":12,"endColumn":16},{"ruleId":"78","severity":1,"message":"99","line":7,"column":28,"nodeType":"80","messageId":"81","endLine":7,"endColumn":39},{"ruleId":"78","severity":1,"message":"84","line":7,"column":41,"nodeType":"80","messageId":"81","endLine":7,"endColumn":55},{"ruleId":"78","severity":1,"message":"100","line":12,"column":11,"nodeType":"80","messageId":"81","endLine":12,"endColumn":26},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-unused-vars","'avatar' is defined but never used.","Identifier","unusedVar","'io' is defined but never used.","'uuid' is defined but never used.","'setCurrentUser' is assigned a value but never used.","'setIsActionopen' is assigned a value but never used.","'userID' is assigned a value but never used.","'setUserID' is assigned a value but never used.","'socketRef' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentUser', 'setUsers', and 'socket'. Either include them or remove the dependency array.","ArrayExpression",["103"],"React Hook useEffect has missing dependencies: 'setUsers' and 'socket'. Either include them or remove the dependency array.",["104"],"'useEffect' is defined but never used.","'setUsers' is assigned a value but never used.","'isActionOpen' is assigned a value but never used.","'users' is assigned a value but never used.","'currentUser' is assigned a value but never used.","'currentUserTemp' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"105","fix":"106"},{"desc":"107","fix":"108"},"Update the dependencies array to be: [currentUser, setUsers, socket]",{"range":"109","text":"110"},"Update the dependencies array to be: [setUsers, socket]",{"range":"111","text":"112"},[5733,5735],"[currentUser, setUsers, socket]",[5924,5926],"[setUsers, socket]"]