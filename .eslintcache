[{"/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/index.js":"1","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/reportWebVitals.js":"2","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/App.js":"3","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Home/Home.js":"4","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Board/Board.js":"5","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Home/Upload.js":"6","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/context/UserContext.js":"7"},{"size":500,"mtime":1610539040016,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1610539040017,"results":"10","hashOfConfig":"9"},{"size":605,"mtime":1610619584602,"results":"11","hashOfConfig":"9"},{"size":184,"mtime":1610580440714,"results":"12","hashOfConfig":"9"},{"size":2626,"mtime":1610619639115,"results":"13","hashOfConfig":"9"},{"size":1474,"mtime":1610616675362,"results":"14","hashOfConfig":"9"},{"size":349,"mtime":1610616675362,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1ialoog",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/index.js",[],["34","35"],"/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/reportWebVitals.js",[],"/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/App.js",[],"/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Home/Home.js",[],"/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Board/Board.js",["36","37","38","39"],"import React, { useState, useContext, useEffect, useRef } from 'react';\nimport './Board.scss';\nimport avatar from '../../avatar.jpeg';\nimport io from 'socket.io-client';\n\nimport { UserContext } from '../../context/UserContext';\n\nexport const createEmptyBoard = () => {\n  const BOARD_SIZE = 15;\n  const board = new Array(BOARD_SIZE);\n\n  for (let x = 0; x < BOARD_SIZE; x++) {\n    board[x] = new Array(10);\n    for (let y = 0; y < 10; y++) {\n      board[x][y] = {\n        x,\n        y,\n        isPeople: false,\n        isWall: false,\n        isCoffee: false,\n      };\n    }\n  }\n  return board;\n};\n\nexport const drawBoard = (board, user) => {\n  return board.map((row) => {\n    return row.map((cell, index) => {\n      return user.map((u) => {\n        return (\n          <div key={index} className={cell.isWall ? 'wall' : 'cell'}>\n            {cell.isPeople && <img src={u.avatar} alt='avatar' />}\n          </div>\n        );\n      });\n    });\n  });\n};\n\nexport const populateWithWall = (board, wall) => {\n  board.forEach((row) => {\n    row.forEach((cell) => {\n      wall.forEach((wCell) => {\n        if (wCell.x === cell.x && wCell.y === cell.y) {\n          return (cell.isWall = true);\n        }\n      });\n    });\n  });\n};\nexport const populateWithCoffee = (board, coffee) => {\n  board.forEach((row) => {\n    row.forEach((cell) => {\n      coffee.forEach((wCell) => {\n        if (wCell.x === cell.x && wCell.y === cell.y) {\n          return (cell.isCoffee = true);\n        }\n      });\n    });\n  });\n};\n\nexport const populateWithPeople = (board, people) => {\n  board.forEach((row) => {\n    row.forEach((cell) => {\n      people.forEach((p) => {\n        if (p.x === cell.x && p.y === cell.y) {\n          return (cell.isPeople = true);\n        }\n      });\n    });\n  });\n};\n\nexport const createBoard = (wall, people) => {\n  const b = createEmptyBoard();\n  populateWithWall(b, wall);\n  populateWithPeople(b, people);\n  return b;\n};\n\nexport const wall = [\n  { x: 0, y: 6 },\n  { x: 0, y: 7 },\n  { x: 1, y: 6 },\n  // { x: 6, y: 3 },\n  // { x: 3, y: 0 },\n  // { x: 3, y: 2 },\n  // { x: 3, y: 3 },\n];\n\nconst Board = () => {\n  const { users, setUsers } = useContext(UserContext);\n  const [board, setBoard] = useState(createBoard(wall, users));\n  const [userID, setUserID] = useState();\n  console.log(board);\n  const socketRef = useRef();\n\n  useEffect(() => {\n    socketRef.current = io.connect('/');\n\n    socketRef.current.on('your id', (id) => {\n      setUserID(id);\n    });\n\n    socketRef.current.on('message', (message) => {});\n  }, []);\n\n  return <div className='board-container'>{drawBoard(board, users)}</div>;\n};\n\nexport default Board;\n","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Home/Upload.js",["40"],"import React, { useState, useEffect } from 'react';\nimport './Upload.scss';\nimport axios from 'axios';\n\nconst Upload = () => {\n  const [posts, setPosts] = useState([]);\n  const [title, setTitle] = useState('Enter your Name');\n  const [mainPicture, setMainPicture] = useState(null);\n\n  useEffect(() => {\n    axios\n      .get('http://localhost:5000/posts')\n      .then((res) => res.data)\n      .then((data) => setPosts(data));\n  }, []);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append('title', title);\n    formData.append('main_picture', mainPicture);\n\n    axios\n      .post('http://localhost:5000/posts', formData)\n      .then((res) => res.data)\n      .then((data) =>\n        setPosts([...posts, { title, main_picture_url: data.main_picture_url }])\n      );\n  };\n\n  return (\n    <div>\n      <h2>Welcome On Board !</h2>\n      <form onSubmit={handleSubmit}>\n        <input\n          type='text'\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n        />\n        <br />\n        <p>Select your picture</p>\n        <input\n          type='file'\n          onChange={(e) => setMainPicture(e.target.files[0])}\n        />\n        <br />\n        <input type='submit' value='Create Your Avatar' />\n        <p>how does it work ?</p>\n      </form>\n    </div>\n  );\n};\n\nexport default Upload;\n",["41","42"],"/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/context/UserContext.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":3,"column":8,"nodeType":"49","messageId":"50","endLine":3,"endColumn":14},{"ruleId":"47","severity":1,"message":"51","line":94,"column":18,"nodeType":"49","messageId":"50","endLine":94,"endColumn":26},{"ruleId":"47","severity":1,"message":"52","line":95,"column":17,"nodeType":"49","messageId":"50","endLine":95,"endColumn":25},{"ruleId":"47","severity":1,"message":"53","line":96,"column":10,"nodeType":"49","messageId":"50","endLine":96,"endColumn":16},{"ruleId":"47","severity":1,"message":"54","line":12,"column":11,"nodeType":"49","messageId":"50","endLine":12,"endColumn":16},{"ruleId":"43","replacedBy":"55"},{"ruleId":"45","replacedBy":"56"},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-unused-vars","'avatar' is defined but never used.","Identifier","unusedVar","'setUsers' is assigned a value but never used.","'setBoard' is assigned a value but never used.","'userID' is assigned a value but never used.","'users' is assigned a value but never used.",["57"],["58"],"no-global-assign","no-unsafe-negation"]