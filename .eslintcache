[{"/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/index.js":"1","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/App.js":"2","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/reportWebVitals.js":"3","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Home/Home.js":"4","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/context/UserContext.js":"5","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Board/Board.js":"6","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Board/Cell.js":"7","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Home/Upload.js":"8","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Home/Background.js":"9","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Home/Modal.js":"10","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Home/SoundEffectContext.js":"11","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Action/Action.js":"12","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Shifoumi/Play.js":"13","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/CurrentUser/CurrentUser.js":"14"},{"size":449,"mtime":1610654212582,"results":"15","hashOfConfig":"16"},{"size":786,"mtime":1610704969710,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1610642516802,"results":"18","hashOfConfig":"16"},{"size":402,"mtime":1610658764057,"results":"19","hashOfConfig":"16"},{"size":1043,"mtime":1610704904482,"results":"20","hashOfConfig":"16"},{"size":6673,"mtime":1610704969711,"results":"21","hashOfConfig":"16"},{"size":1368,"mtime":1610704969712,"results":"22","hashOfConfig":"16"},{"size":3296,"mtime":1610704904466,"results":"23","hashOfConfig":"16"},{"size":239,"mtime":1610654212580,"results":"24","hashOfConfig":"16"},{"size":412,"mtime":1610642569195,"results":"25","hashOfConfig":"16"},{"size":478,"mtime":1610658764061,"results":"26","hashOfConfig":"16"},{"size":2366,"mtime":1610704969711,"results":"27","hashOfConfig":"16"},{"size":6413,"mtime":1610704969713,"results":"28","hashOfConfig":"16"},{"size":494,"mtime":1610704904464,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1ialoog",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"32"},"/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/index.js",[],["65","66"],"/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/App.js",[],"/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/reportWebVitals.js",[],"/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Home/Home.js",[],"/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/context/UserContext.js",[],"/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Board/Board.js",["67","68","69","70","71","72","73","74","75","76"],"import React, { useState, useContext, useEffect, useRef } from 'react';\nimport './Board.scss';\nimport avatar from '../../avatar.jpeg';\nimport io from 'socket.io-client';\nimport uuid from 'react-uuid';\nimport Cell from './Cell';\nimport Background from '../Home/Background';\nimport Action from '../Action/Action';\n\nimport { UserContext } from '../../context/UserContext';\n// import Action from '../Action/Action';\n\nexport const createEmptyBoard = () => {\n  const BOARD_SIZE = 10;\n  const board = new Array(BOARD_SIZE);\n\n  for (let x = 0; x < BOARD_SIZE; x++) {\n    board[x] = new Array(BOARD_SIZE);\n    for (let y = 0; y < BOARD_SIZE; y++) {\n      board[x][y] = {\n        x,\n        y,\n        isPeople: false,\n        isWall: false,\n        isCoffee: false,\n        isComputer: false,\n        isDesk: false,\n        isTree: false,\n      };\n    }\n  }\n  return board;\n};\nexport const handleClassname = (cell) => {\n  if (cell.isWall === true) {\n    return 'wall';\n  } else if (cell.isCoffee === true) {\n    return 'coffee';\n  } else if (cell.isComputer === true) {\n    return 'computer';\n  } else if (cell.isDesk === true) {\n    return 'desk';\n  } else if (cell.isTree === true) {\n    return 'tree';\n  } else {\n    return 'cell';\n  }\n};\n\nexport const drawBoard = (board, user) => {\n  return board.map((row) => {\n    return row.map((cell, index) => {\n      return (\n        <Cell\n          key={index}\n          cellStyle={cell.isWall ? 'wall' : 'cell'}\n          isPlayer={cell.isPeople}\n          cell={cell}\n          // handleClassname={handleClassname}\n        />\n      );\n    });\n  });\n};\nexport const populateWithTree = (board, tree) => {\n  board.forEach((row) => {\n    row.forEach((cell) => {\n      tree.forEach((wCell) => {\n        if (wCell.x === cell.x && wCell.y === cell.y) {\n          return (cell.isTree = true);\n        }\n      });\n    });\n  });\n};\nexport const populateWithDesk = (board, desk) => {\n  board.forEach((row) => {\n    row.forEach((cell) => {\n      desk.forEach((wCell) => {\n        if (wCell.x === cell.x && wCell.y === cell.y) {\n          return (cell.isDesk = true);\n        }\n      });\n    });\n  });\n};\nexport const populateWithComputer = (board, computer) => {\n  board.forEach((row) => {\n    row.forEach((cell) => {\n      computer.forEach((wCell) => {\n        if (wCell.x === cell.x && wCell.y === cell.y) {\n          return (cell.isComputer = true);\n        }\n      });\n    });\n  });\n};\nexport const populateWithCoffee = (board, coffee) => {\n  board.forEach((row) => {\n    row.forEach((cell) => {\n      coffee.forEach((wCell) => {\n        if (wCell.x === cell.x && wCell.y === cell.y) {\n          return (cell.isCoffee = true);\n        }\n      });\n    });\n  });\n};\nexport const populateWithWall = (board, wall) => {\n  board.forEach((row) => {\n    row.forEach((cell) => {\n      wall.forEach((wCell) => {\n        if (wCell.x === cell.x && wCell.y === cell.y) {\n          return (cell.isWall = true);\n        }\n      });\n    });\n  });\n};\nexport const populateWithPeople = (board, people) => {\n  if (people) {\n    board.forEach((row) => {\n      row.forEach((cell) => {\n        people.forEach((p) => {\n          if (cell && p) {\n            if (p.x === cell.x && p.y === cell.y) {\n              cell.isPeople = true;\n              cell.avatar = p.avatar;\n              cell.user = p;\n              return cell;\n            }\n          }\n        });\n      });\n    });\n  }\n};\nexport const createBoard = (tree, desk, computer, coffee, wall, people) => {\n  const b = createEmptyBoard();\n  populateWithTree(b, tree);\n  populateWithDesk(b, desk);\n  populateWithComputer(b, computer);\n  populateWithCoffee(b, coffee);\n  populateWithWall(b, wall);\n  populateWithPeople(b, people);\n  return b;\n};\n\nexport const wall = [\n  { x: 0, y: 6 },\n  { x: 1, y: 6 },\n  { x: 3, y: 6 },\n  { x: 3, y: 7 },\n  { x: 3, y: 8 },\n  { x: 3, y: 9 },\n  { x: 2, y: 0 },\n  { x: 2, y: 1 },\n  { x: 2, y: 2 },\n  { x: 2, y: 3 },\n  { x: 3, y: 3 },\n  { x: 4, y: 3 },\n  { x: 7, y: 5 },\n  { x: 8, y: 5 },\n  { x: 9, y: 5 },\n];\n\nexport const coffee = [{ x: 3, y: 1 }];\n\nexport const computer = [{ x: 0, y: 8 }];\nexport const desk = [\n  { x: 7, y: 1 },\n  { x: 7, y: 3 },\n  { x: 9, y: 1 },\n  { x: 9, y: 3 },\n];\n\nexport const tree = [\n  { x: 0, y: 5 },\n  { x: 4, y: 9 },\n  { x: 7, y: 6 },\n  { x: 8, y: 9 },\n  { x: 9, y: 7 },\n];\n\nconst Board = () => {\n  const {\n    users,\n    setUsers,\n    currentUser,\n    setCurrentUser,\n    isActionOpen,\n    setIsActionopen,\n    socket,\n  } = useContext(UserContext);\n\n  const initialBoard = createBoard(tree, desk, computer, coffee, wall, users);\n\n  const [board, setBoard] = useState(initialBoard);\n  const [userID, setUserID] = useState();\n  const socketRef = useRef();\n  useEffect(() => {\n    const newBoard = createBoard(tree, desk, computer, coffee, wall, users);\n    setBoard(newBoard);\n  }, [users]);\n\n  // const socketRef = useRef();\n  // socket = io.connect('/');\n\n  useEffect(() => {\n    let usersRegistered = [];\n    socket.emit('sendCurrentUser', currentUser);\n\n    socket.on('connect', () => {});\n\n    socket.on('sendNewUser', (newUser) => {\n      const userAlreadyExist = usersRegistered.some(\n        (user) => user.id === newUser.id\n      );\n\n      if (!userAlreadyExist) {\n        usersRegistered.push(newUser);\n        setUsers((prevState) => [...prevState, newUser]);\n      }\n      socket.emit('clientSendFirstUser', currentUser);\n    });\n\n    socket.on('serverSendFirstUser', (newUser) => {\n      const userAlreadyExist = usersRegistered.some(\n        (user) => user.id === newUser.id\n      );\n\n      if (!userAlreadyExist) {\n        usersRegistered.push(newUser);\n        setUsers((prevState) => [...prevState, newUser]);\n      }\n    });\n\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n\n  useEffect(() => {\n    socket.on('otherUserMove', (data) => {\n      setUsers((users) => {\n        return [...users.filter((user) => user.id !== data.id), data];\n      });\n    });\n  }, []);\n\n  return (\n    <div>\n      <Background />\n      {isActionOpen && <Action />}\n\n      <div className='board-container'>{drawBoard(board, users)}</div>\n    </div>\n  );\n};\nexport default Board;\n","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Board/Cell.js",["77","78","79","80"],"import React, { useContext, useEffect } from 'react';\nimport { UserContext } from '../../context/UserContext';\nimport { handleClassname, shootPlayer } from './Board';\nimport { useHistory } from 'react-router-dom';\n\nexport default function Cell(props) {\n  const { isPlayer, cell } = props;\n  const {\n    users,\n    setUsers,\n    currentUser,\n    setCurrentUser,\n    isActionOpen,\n    setIsActionOpen,\n    socket,\n    setPlayerShot,\n  } = useContext(UserContext);\n\n  const history = useHistory();\n\n  let newCurrentUser = {};\n\n  const handleClick = (e) => {\n    if (cell.isComputer) {\n      history.push('/game');\n    }\n    if (isPlayer) {\n      setPlayerShot(cell.user);\n\n      setIsActionOpen(true);\n    } else {\n      setIsActionOpen(false);\n\n      if (cell.isPlayer) {\n        console.log(cell.user);\n      } else {\n        const userIndex = users.findIndex((user) => user.id === currentUser.id);\n\n        newCurrentUser = {\n          // eslint-disable-next-line no-restricted-globals\n          name: users[userIndex].name,\n          avatar: users[userIndex].avatar,\n          id: users[userIndex].id,\n          life: users[userIndex].life,\n          nerf: users[userIndex].nerf,\n          x: cell.x,\n          y: cell.y,\n        };\n\n        socket.emit('currentUserMove', newCurrentUser);\n      }\n    }\n  };\n\n  return (\n    <div className={cell && handleClassname(cell)} onClick={handleClick}>\n      {isPlayer && <img src={cell.avatar} alt='avatar' />}\n    </div>\n  );\n}\n","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Home/Upload.js",["81"],"import React, { useState, useContext } from 'react';\n/* import Modal from './Modal'; */\nimport './Upload.scss';\nimport axios from 'axios';\nimport { UserContext } from '../../context/UserContext';\nimport { Link } from 'react-router-dom';\n\nconst Upload = () => {\n  const [title, setTitle] = useState('Enter your Name');\n  const [mainPicture, setMainPicture] = useState(null);\n\n  const { users, setUsers } = useContext(UserContext);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append('title', title);\n    formData.append('main_picture', mainPicture);\n\n    const res = await axios.post(\n      'http://localhost:5000/uploaddufichier',\n      formData\n    );\n    await setUsers([\n      {\n        name: res.data.name,\n        avatar: `http://localhost:5000/${res.data.path}`,\n        x: Math.floor(Math.random() * 10),\n        y: Math.floor(Math.random() * 10),\n      },\n    ]);\n  };\n\n  return (\n    <div>\n      <h2>Welcome On Board !</h2>\n      <form onSubmit={handleSubmit}>\n        <input\n          type='text'\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n        />\n        <br />\n        <p>Select your picture</p>\n        <input\n          type='file'\n          onChange={(e) => setMainPicture(e.target.files[0])}\n        />\n        <br />\n        <input type='submit' value='Create Your Avatar' />\n        <p>how does it work ?</p>\n      </form>\n      <Link to='/board'>Join</Link>\n    </div>\n  );\n};\n\nexport default Upload;\n","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Home/Background.js",[],"/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Home/Modal.js",[],"/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Home/SoundEffectContext.js",[],"/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Action/Action.js",["82","83","84"],"import React, { useContext } from 'react';\nimport { UserContext } from '../../context/UserContext';\nimport './Action.scss';\n\nconst Action = () => {\n  const { users, setUsers, currentUser, setCurrentUser } = useContext(\n    UserContext\n  );\n\n  const handleCoffee = () => {\n    const currentUserTemp = [];\n\n    const userTemp = [];\n    users.forEach((e) => {\n      userTemp.push({ name: e.name, avatar: e.avatar, id: e.id });\n    });\n    userTemp[0].x = 3;\n    userTemp[0].y = 0;\n    userTemp[1].x = 3;\n    userTemp[1].y = 2;\n\n    setUsers(userTemp);\n    console.log(users);\n  };\n\n  return (\n    <div>\n      <h3>Choose Your Action</h3>\n      <div>\n        <div onClick={handleCoffee}>Drink Coffee</div>\n        <div>SHOOT</div>\n        <div>Challenge + name</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Action;\n","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Shifoumi/Play.js",["85","86","87","88","89","90","91"],"import React, { useState, useEffect, useContext } from 'react';\nimport './Play.css';\nimport paper from './Images/paper.png';\nimport cisors from './Images/cisors.png';\nimport rock from './Images/rock.png';\nimport paperReverse from './Images/paperReverse.png';\nimport cisorsReverse from './Images/cisorsReverse.png';\nimport rockReverse from './Images/rockReverse.png';\nimport jesus from './Images/jesus.jpg';\nimport doctor from './Images/doctor.jpg';\nimport { UserContext } from '../../context/UserContext';\nimport { Link } from 'react-router-dom';\n\nconst Play = () => {\n  const { socket, currentUser } = useContext(UserContext);\n\n  const [player1, setPlayer1] = useState(currentUser);\n  const [player2, setPlayer2] = useState();\n  const [playerChoice, setPlayerChoice] = useState(null);\n  const [computerChoice, setComputerChoice] = useState(null);\n  const [isWinner, setIsWinner] = useState('');\n  const [playerCounter, setPlayerCounter] = useState(0);\n  const [computerCounter, setComputerCounter] = useState(0);\n  const [victorious, setVictorious] = useState();\n\n  useEffect(() => {\n    socket.emit('joinShifoumi', 'room1');\n\n    socket.on('welcome', (data) => {\n      console.log(data);\n      socket.emit('userJoin', currentUser);\n    });\n\n    socket.on('player2', (player2) => {\n      setPlayer2(player2);\n    });\n\n    socket.on('player2Choice', (player2Choice) => {\n      setComputerChoice(player2Choice);\n    });\n\n    socket.on('player2Score', (score) => {\n      setComputerCounter(score);\n    });\n  }, []);\n\n  useEffect(() => {\n    if (playerChoice) {\n      socket.emit('player1Choice', playerChoice);\n    }\n  }, [playerChoice]);\n\n  useEffect(() => {\n    if (playerCounter) {\n      socket.emit('player1Score', playerCounter);\n    }\n  }, [playerCounter]);\n\n  useEffect(() => {\n    if (playerCounter === 3) {\n      setVictorious(player1);\n    } else if (computerCounter === 3) {\n      setVictorious(player2);\n    }\n  }, [playerCounter, computerCounter]);\n\n  const comparePick = () => {\n    if (playerChoice === computerChoice) {\n      setIsWinner('Draw');\n      console.log('Draw');\n    } else if (\n      (playerChoice === 1 && computerChoice === 3) ||\n      (playerChoice === 2 && computerChoice === 1) ||\n      (playerChoice === 3 && computerChoice === 2)\n    ) {\n      setIsWinner('You win');\n      setPlayerCounter(playerCounter + 1);\n      console.log('You win');\n    } else {\n      setIsWinner('You loose');\n      //   setComputerCounter(computerCounter + 1);\n      console.log('You loose');\n    }\n    setPlayerChoice();\n    setComputerChoice();\n  };\n\n  useEffect(() => {\n    if (playerChoice && computerChoice) {\n      comparePick();\n    }\n  }, [playerChoice, computerChoice]);\n\n  const showWinner = () => {\n    if (!victorious) {\n      return (\n        <div className='playBody'>\n          <h1>Challenge me if you dare !</h1>\n          <h2>{isWinner}</h2>\n          <div className='playPart'>\n            <div className='playerChoice'>\n              <img\n                src={paper}\n                alt={paper}\n                className='playerWeapon'\n                onClick={() => {\n                  setPlayerChoice(1);\n                }}\n              />\n              <img\n                src={cisors}\n                alt={cisors}\n                onClick={() => {\n                  setPlayerChoice(2);\n                }}\n              />\n              <img\n                src={rock}\n                alt={rock}\n                onClick={() => {\n                  setPlayerChoice(3);\n                }}\n              />\n            </div>\n            <img\n              src={player1.avatar}\n              alt={player1.name}\n              className='avatarimg'\n              style={{\n                width: 300,\n                height: 400,\n                position: 'absolute',\n                left: 50,\n                bottom: 150,\n                borderRadius: 20,\n              }}\n            />\n            <div className='scorePartDoctor'>\n              <p>{player1 && player1.name}</p>\n              <h2>Score : {playerCounter}</h2>\n            </div>\n            <div className='computerChoice'>\n              <img src={paperReverse} alt={paperReverse} />\n              <img src={cisorsReverse} alt={cisorsReverse} />\n              <img src={rockReverse} alt={rockReverse} />\n            </div>\n            <img\n              src={player2 && player2.avatar}\n              alt={player2 && player2.name}\n              style={{\n                width: 300,\n                height: 400,\n                position: 'absolute',\n                right: 50,\n                bottom: 150,\n                borderRadius: 20,\n              }}\n            />\n            <div className='scorePartJesus'>\n              <p>{player2 && player2.name}</p>\n\n              <h2>Score : {computerCounter}</h2>\n            </div>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <img\n            src={doctor}\n            alt='aa'\n            style={{\n              width: 300,\n              height: 400,\n              position: 'absolute',\n              right: 50,\n              bottom: 150,\n              borderRadius: 20,\n            }}\n          />\n          {/* {victorious.name} */}\n          Player 1 won the game !\n          <div>\n            <input type='button' value='Play again' onClick={reset} />\n            <Link to={'/board'}>Back</Link>\n          </div>\n        </div>\n      );\n    }\n  };\n\n  const reset = () => {\n    setVictorious();\n    setPlayerCounter(0);\n    setComputerCounter(0);\n  };\n\n  return <>{showWinner()}</>;\n};\n\nexport default Play;\n\n// Step 1 : Reconnaitre le click:\n// -> creation state choix du player\n// -> onClick={() => setPlayerChoice()} pour mettre à jour le state.\n\n// Step 2 : Au click donner un state d'une valeur aléatoire pour l'ordi\n// -> creer state computer\n// -> creer un random number entre 0 et 2 pour le choix de l'ordi --> console.log en premier puis mettre à jour le state.\n// -> Math.floor(Math.random() * Math.floor(3))\n\n// Step 3 : définir en fonction des 2 states liés aux choix\n// -> création d'un state isWinner pour savoir si l'utilisateur gagne\n// -> création conditions\n\n// Step 4 : créer counter:\n// -> creer state pour player et computer\n// -> incrémente de 1 dans les conditions\n// -> affichage h2 dans le return\n","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/CurrentUser/CurrentUser.js",["92"],"import React, { useContext } from 'react';\nimport { UserContext } from '../../context/UserContext';\nimport './CurrentUser.scss';\n\nconst CurrentUser = () => {\n  const { currentUser } = useContext(UserContext);\n\n  return (\n    <div className='user-container'>\n      <img src={currentUser.avatar} />\n      <div>\n        <div>{currentUser.name}</div>\n        <div>{currentUser.life}/100</div>\n        <div>{currentUser.nerf} nerfs</div>\n      </div>\n    </div>\n  );\n};\n\nexport default CurrentUser;\n",{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":3,"column":8,"nodeType":"99","messageId":"100","endLine":3,"endColumn":14},{"ruleId":"97","severity":1,"message":"101","line":4,"column":8,"nodeType":"99","messageId":"100","endLine":4,"endColumn":10},{"ruleId":"97","severity":1,"message":"102","line":5,"column":8,"nodeType":"99","messageId":"100","endLine":5,"endColumn":12},{"ruleId":"97","severity":1,"message":"103","line":190,"column":5,"nodeType":"99","messageId":"100","endLine":190,"endColumn":19},{"ruleId":"97","severity":1,"message":"104","line":192,"column":5,"nodeType":"99","messageId":"100","endLine":192,"endColumn":20},{"ruleId":"97","severity":1,"message":"105","line":199,"column":10,"nodeType":"99","messageId":"100","endLine":199,"endColumn":16},{"ruleId":"97","severity":1,"message":"106","line":199,"column":18,"nodeType":"99","messageId":"100","endLine":199,"endColumn":27},{"ruleId":"97","severity":1,"message":"107","line":200,"column":9,"nodeType":"99","messageId":"100","endLine":200,"endColumn":18},{"ruleId":"108","severity":1,"message":"109","line":241,"column":6,"nodeType":"110","endLine":241,"endColumn":8,"suggestions":"111"},{"ruleId":"108","severity":1,"message":"112","line":249,"column":6,"nodeType":"110","endLine":249,"endColumn":8,"suggestions":"113"},{"ruleId":"97","severity":1,"message":"114","line":1,"column":29,"nodeType":"99","messageId":"100","endLine":1,"endColumn":38},{"ruleId":"97","severity":1,"message":"115","line":9,"column":5,"nodeType":"99","messageId":"100","endLine":9,"endColumn":13},{"ruleId":"97","severity":1,"message":"103","line":11,"column":5,"nodeType":"99","messageId":"100","endLine":11,"endColumn":19},{"ruleId":"97","severity":1,"message":"116","line":12,"column":5,"nodeType":"99","messageId":"100","endLine":12,"endColumn":17},{"ruleId":"97","severity":1,"message":"117","line":12,"column":11,"nodeType":"99","messageId":"100","endLine":12,"endColumn":16},{"ruleId":"97","severity":1,"message":"118","line":7,"column":28,"nodeType":"99","messageId":"100","endLine":7,"endColumn":39},{"ruleId":"97","severity":1,"message":"103","line":7,"column":41,"nodeType":"99","messageId":"100","endLine":7,"endColumn":55},{"ruleId":"97","severity":1,"message":"119","line":12,"column":11,"nodeType":"99","messageId":"100","endLine":12,"endColumn":26},{"ruleId":"97","severity":1,"message":"120","line":9,"column":8,"nodeType":"99","messageId":"100","endLine":9,"endColumn":13},{"ruleId":"97","severity":1,"message":"121","line":17,"column":19,"nodeType":"99","messageId":"100","endLine":17,"endColumn":29},{"ruleId":"108","severity":1,"message":"122","line":45,"column":6,"nodeType":"110","endLine":45,"endColumn":8,"suggestions":"123"},{"ruleId":"108","severity":1,"message":"124","line":51,"column":6,"nodeType":"110","endLine":51,"endColumn":20,"suggestions":"125"},{"ruleId":"108","severity":1,"message":"124","line":57,"column":6,"nodeType":"110","endLine":57,"endColumn":21,"suggestions":"126"},{"ruleId":"108","severity":1,"message":"127","line":65,"column":6,"nodeType":"110","endLine":65,"endColumn":38,"suggestions":"128"},{"ruleId":"108","severity":1,"message":"129","line":92,"column":6,"nodeType":"110","endLine":92,"endColumn":36,"suggestions":"130"},{"ruleId":"131","severity":1,"message":"132","line":10,"column":7,"nodeType":"133","endLine":10,"endColumn":39},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"no-unused-vars","'avatar' is defined but never used.","Identifier","unusedVar","'io' is defined but never used.","'uuid' is defined but never used.","'setCurrentUser' is assigned a value but never used.","'setIsActionopen' is assigned a value but never used.","'userID' is assigned a value but never used.","'setUserID' is assigned a value but never used.","'socketRef' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentUser', 'setUsers', and 'socket'. Either include them or remove the dependency array.","ArrayExpression",["136"],"React Hook useEffect has missing dependencies: 'setUsers' and 'socket'. Either include them or remove the dependency array.",["137"],"'useEffect' is defined but never used.","'setUsers' is assigned a value but never used.","'isActionOpen' is assigned a value but never used.","'users' is assigned a value but never used.","'currentUser' is assigned a value but never used.","'currentUserTemp' is assigned a value but never used.","'jesus' is defined but never used.","'setPlayer1' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currentUser' and 'socket'. Either include them or remove the dependency array.",["138"],"React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array.",["139"],["140"],"React Hook useEffect has missing dependencies: 'player1' and 'player2'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setVictorious' needs the current value of 'player1'.",["141"],"React Hook useEffect has a missing dependency: 'comparePick'. Either include it or remove the dependency array.",["142"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},"Update the dependencies array to be: [currentUser, setUsers, socket]",{"range":"157","text":"158"},"Update the dependencies array to be: [setUsers, socket]",{"range":"159","text":"160"},"Update the dependencies array to be: [currentUser, socket]",{"range":"161","text":"162"},"Update the dependencies array to be: [playerChoice, socket]",{"range":"163","text":"164"},"Update the dependencies array to be: [playerCounter, socket]",{"range":"165","text":"166"},"Update the dependencies array to be: [playerCounter, computerCounter, player1, player2]",{"range":"167","text":"168"},"Update the dependencies array to be: [playerChoice, computerChoice, comparePick]",{"range":"169","text":"170"},[5733,5735],"[currentUser, setUsers, socket]",[5924,5926],"[setUsers, socket]",[1509,1511],"[currentUser, socket]",[1620,1634],"[playerChoice, socket]",[1744,1759],"[playerCounter, socket]",[1925,1957],"[playerCounter, computerCounter, player1, player2]",[2657,2687],"[playerChoice, computerChoice, comparePick]"]