[{"/home/antoine/Quests/hackaton/Hackaton-Apside/src/index.js":"1","/home/antoine/Quests/hackaton/Hackaton-Apside/src/App.js":"2","/home/antoine/Quests/hackaton/Hackaton-Apside/src/reportWebVitals.js":"3","/home/antoine/Quests/hackaton/Hackaton-Apside/src/components/Home/Home.js":"4","/home/antoine/Quests/hackaton/Hackaton-Apside/src/components/Home/Upload.js":"5","/home/antoine/Quests/hackaton/Hackaton-Apside/src/components/Board/Board.js":"6","/home/antoine/Quests/hackaton/Hackaton-Apside/src/context/UserContext.js":"7"},{"size":500,"mtime":1610539132830,"results":"8","hashOfConfig":"9"},{"size":605,"mtime":1610572122228,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1610539132830,"results":"11","hashOfConfig":"9"},{"size":184,"mtime":1610572098700,"results":"12","hashOfConfig":"9"},{"size":1474,"mtime":1610572122228,"results":"13","hashOfConfig":"9"},{"size":1996,"mtime":1610572122228,"results":"14","hashOfConfig":"9"},{"size":349,"mtime":1610572122228,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1mjy1bu",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/antoine/Quests/hackaton/Hackaton-Apside/src/index.js",[],"/home/antoine/Quests/hackaton/Hackaton-Apside/src/App.js",[],"/home/antoine/Quests/hackaton/Hackaton-Apside/src/reportWebVitals.js",[],"/home/antoine/Quests/hackaton/Hackaton-Apside/src/components/Home/Home.js",[],["32","33"],"/home/antoine/Quests/hackaton/Hackaton-Apside/src/components/Home/Upload.js",[],"/home/antoine/Quests/hackaton/Hackaton-Apside/src/components/Board/Board.js",["34","35","36"],"import React, { useState, useContext } from 'react';\nimport './Board.scss';\nimport avatar from '../../avatar.jpeg';\nimport { UserContext } from '../../context/UserContext';\n\nexport const createEmptyBoard = () => {\n  const BOARD_SIZE = 10;\n  const board = new Array(BOARD_SIZE);\n\n  for (let x = 0; x < BOARD_SIZE; x++) {\n    board[x] = new Array(BOARD_SIZE);\n    for (let y = 0; y < BOARD_SIZE; y++) {\n      board[x][y] = {\n        x,\n        y,\n        isPeople: false,\n        isWall: false,\n      };\n    }\n  }\n  return board;\n};\n\nexport const drawBoard = (board, user) => {\n  return board.map((row) => {\n    return row.map((cell, index) => {\n      return user.map((u) => {\n        return (\n          <div key={index} className={cell.isWall ? 'wall' : 'cell'}>\n            {cell.isPeople && <img src={u.avatar} alt='avatar' />}\n          </div>\n        );\n      });\n    });\n  });\n};\n\nexport const populateWithWall = (board, wall) => {\n  board.forEach((row) => {\n    row.forEach((cell) => {\n      wall.forEach((wCell) => {\n        if (wCell.x === cell.x && wCell.y === cell.y) {\n          return (cell.isWall = true);\n        }\n      });\n    });\n  });\n};\nexport const populateWithPeople = (board, people) => {\n  board.forEach((row) => {\n    row.forEach((cell) => {\n      people.forEach((p) => {\n        if (p.x === cell.x && p.y === cell.y) {\n          return (cell.isPeople = true);\n        }\n      });\n    });\n  });\n};\n\nexport const createBoard = (wall, people) => {\n  const b = createEmptyBoard();\n  populateWithWall(b, wall);\n  populateWithPeople(b, people);\n  return b;\n};\n\nexport const wall = [\n  { x: 0, y: 4 },\n  { x: 1, y: 4 },\n  { x: 3, y: 0 },\n  { x: 3, y: 1 },\n  { x: 3, y: 2 },\n  { x: 5, y: 9 },\n  { x: 5, y: 8 },\n];\n\nconst Board = () => {\n  const { users, setUsers } = useContext(UserContext);\n  const [board, setBoard] = useState(createBoard(wall, users));\n  console.log(board);\n\n  return <div className='board-container'>{drawBoard(board, users)}</div>;\n};\n\nexport default Board;\n","/home/antoine/Quests/hackaton/Hackaton-Apside/src/context/UserContext.js",[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":1,"column":27,"nodeType":"43","messageId":"44","endLine":1,"endColumn":36},{"ruleId":"41","severity":1,"message":"45","line":71,"column":17,"nodeType":"43","messageId":"44","endLine":71,"endColumn":25},{"ruleId":"41","severity":1,"message":"46","line":72,"column":17,"nodeType":"43","messageId":"44","endLine":72,"endColumn":25},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'setUsers' is assigned a value but never used.","'setBoard' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]