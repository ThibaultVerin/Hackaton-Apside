[{"/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/index.js":"1","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/App.js":"2","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/reportWebVitals.js":"3","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Home/Home.js":"4","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/context/UserContext.js":"5","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Board/Board.js":"6","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Board/Cell.js":"7","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Home/Upload.js":"8","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Home/Background.js":"9","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Home/Modal.js":"10","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Board/Page.js":"11","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Home/SoundEffectContext.js":"12"},{"size":449,"mtime":1610654212582,"results":"13","hashOfConfig":"14"},{"size":810,"mtime":1610658751662,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1610642516802,"results":"16","hashOfConfig":"14"},{"size":402,"mtime":1610658764057,"results":"17","hashOfConfig":"14"},{"size":687,"mtime":1610654212581,"results":"18","hashOfConfig":"14"},{"size":6029,"mtime":1610654212579,"results":"19","hashOfConfig":"14"},{"size":1029,"mtime":1610654212580,"results":"20","hashOfConfig":"14"},{"size":3263,"mtime":1610658764061,"results":"21","hashOfConfig":"14"},{"size":239,"mtime":1610654212580,"results":"22","hashOfConfig":"14"},{"size":412,"mtime":1610642569195,"results":"23","hashOfConfig":"14"},{"size":454,"mtime":1610658751662,"results":"24","hashOfConfig":"14"},{"size":478,"mtime":1610658764061,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1ialoog",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/index.js",[],["54","55"],"/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/App.js",[],"/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/reportWebVitals.js",[],"/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Home/Home.js",[],"/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/context/UserContext.js",[],"/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Board/Board.js",["56","57","58","59"],"import React, { useState, useContext, useEffect, useRef } from 'react';\nimport './Board.scss';\nimport avatar from '../../avatar.jpeg';\nimport io from 'socket.io-client';\n\nimport { UserContext } from '../../context/UserContext';\n\nexport const createEmptyBoard = () => {\n  const BOARD_SIZE = 10;\n  const board = new Array(BOARD_SIZE);\n\n  for (let x = 0; x < BOARD_SIZE; x++) {\n    board[x] = new Array(BOARD_SIZE);\n    for (let y = 0; y < BOARD_SIZE; y++) {\n      board[x][y] = {\n        x,\n        y,\n        isPeople: false,\n        isWall: false,\n        isCoffee: false,\n        isComputer: false,\n        isDesk: false,\n        isTree: false,\n      };\n    }\n  }\n  return board;\n};\nconst handleClassname = (cell) => {\n  if (cell.isWall === true) {\n    return 'wall';\n  } else if (cell.isCoffee === true) {\n    return 'coffee';\n  } else if (cell.isComputer === true) {\n    return 'computer';\n  } else if (cell.isDesk === true) {\n    return 'desk';\n  } else if (cell.isTree === true) {\n    return 'tree';\n  } else {\n    return 'cell';\n  }\n};\nexport const drawBoard = (board, user) => {\n  return board.map((row) => {\n    return row.map((cell, index) => {\n      return user.map((u) => {\n        return (\n          <div key={index} className={handleClassname(cell)}>\n            {cell.isPeople && <img src={u.avatar} alt='avatar' />}\n          </div>\n        );\n      });\n    });\n  });\n};\nexport const populateWithTree = (board, tree) => {\n  board.forEach((row) => {\n    row.forEach((cell) => {\n      tree.forEach((wCell) => {\n        if (wCell.x === cell.x && wCell.y === cell.y) {\n          return (cell.isTree = true);\n        }\n      });\n    });\n  });\n};\nexport const populateWithDesk = (board, desk) => {\n  board.forEach((row) => {\n    row.forEach((cell) => {\n      desk.forEach((wCell) => {\n        if (wCell.x === cell.x && wCell.y === cell.y) {\n          return (cell.isDesk = true);\n        }\n      });\n    });\n  });\n};\nexport const populateWithComputer = (board, computer) => {\n  board.forEach((row) => {\n    row.forEach((cell) => {\n      computer.forEach((wCell) => {\n        if (wCell.x === cell.x && wCell.y === cell.y) {\n          return (cell.isComputer = true);\n        }\n      });\n    });\n  });\n};\nexport const populateWithCoffee = (board, coffee) => {\n  board.forEach((row) => {\n    row.forEach((cell) => {\n      coffee.forEach((wCell) => {\n        if (wCell.x === cell.x && wCell.y === cell.y) {\n          return (cell.isCoffee = true);\n        }\n      });\n    });\n  });\n};\nexport const populateWithWall = (board, wall) => {\n  board.forEach((row) => {\n    row.forEach((cell) => {\n      wall.forEach((wCell) => {\n        if (wCell.x === cell.x && wCell.y === cell.y) {\n          return (cell.isWall = true);\n        }\n      });\n    });\n  });\n};\nexport const populateWithPeople = (board, people) => {\n  board.forEach((row) => {\n    row.forEach((cell) => {\n      people.forEach((p) => {\n        if (p.x === cell.x && p.y === cell.y) {\n          return (cell.isPeople = true);\n        }\n      });\n    });\n  });\n};\nexport const createBoard = (tree, desk, computer, coffee, wall, people) => {\n  const b = createEmptyBoard();\n  populateWithTree(b, tree);\n  populateWithDesk(b, desk);\n  populateWithComputer(b, computer);\n  populateWithCoffee(b, coffee);\n  populateWithWall(b, wall);\n  populateWithPeople(b, people);\n  return b;\n};\n\nexport const wall = [\n  { x: 0, y: 6 },\n  { x: 1, y: 6 },\n  { x: 3, y: 6 },\n  { x: 3, y: 7 },\n  { x: 3, y: 8 },\n  { x: 3, y: 9 },\n  { x: 2, y: 0 },\n  { x: 2, y: 1 },\n  { x: 2, y: 2 },\n  { x: 2, y: 3 },\n  { x: 3, y: 3 },\n  { x: 4, y: 3 },\n  { x: 7, y: 5 },\n  { x: 8, y: 5 },\n  { x: 9, y: 5 },\n];\n\nexport const coffee = [{ x: 3, y: 1 }];\n\nexport const computer = [{ x: 0, y: 8 }];\nexport const desk = [\n  { x: 7, y: 1 },\n  { x: 7, y: 3 },\n  { x: 9, y: 1 },\n  { x: 9, y: 3 },\n];\n\nexport const tree = [\n  { x: 0, y: 5 },\n  { x: 4, y: 9 },\n  { x: 7, y: 6 },\n  { x: 8, y: 9 },\n  { x: 9, y: 7 },\n];\n\nconst Board = () => {\n  const { users, setUsers } = useContext(UserContext);\n  const [board, setBoard] = useState(\n    createBoard(tree, desk, computer, coffee, wall, users)\n  );\n  const [userID, setUserID] = useState();\n  console.log(board);\n  const socketRef = useRef();\n  useEffect(() => {\n    socketRef.current = io.connect('/');\n    socketRef.current.on('your id', (id) => {\n      setUserID(id);\n    });\n    socketRef.current.on('message', (message) => {});\n  }, []);\n  return <div className='board-container'>{drawBoard(board, users)}</div>;\n};\nexport default Board;\n","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Board/Cell.js",["60","61","62"],"import React, { useContext } from 'react';\nimport avatar from '../../avatar.jpeg';\nimport { UserContext } from '../../context/UserContext';\n\nexport default function Cell(props) {\n  const { cellStyle, isPlayer, cell } = props;\n  const { users, setUsers } = useContext(UserContext);\n\n  const handleClick = (e) => {\n    console.log(e.target);\n    // const x = e.nativeEvent.clientX,\n    //   y = e.nativeEvent.clientY;\n    // setUsers({ x, y });\n  };\n\n  return (\n    <div className={cellStyle} onClick={handleClick}>\n      {isPlayer && (\n        <img\n          src={cell.avatar}\n          alt='avatar'\n          // style={{\n          //   top: position.y,\n          //   left: position.left,\n          //   right: position.right,\n          //   position: 'absolute',\n          // }}\n        />\n      )}\n    </div>\n  );\n}\n","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Home/Upload.js",["63"],"import React, { useState, useContext } from 'react';\n/* import Modal from './Modal'; */\nimport './Upload.scss';\nimport axios from 'axios';\nimport { UserContext } from '../../context/UserContext';\nimport { Link } from 'react-router-dom';\n\nconst Upload = () => {\n  const [title, setTitle] = useState('Enter your Name');\n  const [mainPicture, setMainPicture] = useState(null);\n\n  const { users, setUsers } = useContext(UserContext);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append('title', title);\n    formData.append('main_picture', mainPicture);\n\n    const res = await axios.post(\n      'http://localhost:5000/uploaddufichier',\n      formData\n    );\n    await setUsers([\n      {\n        name: res.data.name,\n        avatar: `http://localhost:5000/${res.data.path}`,\n        x: Math.floor(Math.random() * 10),\n        y: Math.floor(Math.random() * 10),\n      },\n    ]);\n  };\n\n  return (\n    <div>\n      <h2>Welcome On Board !</h2>\n      <form onSubmit={handleSubmit}>\n        <input\n          type='text'\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n        />\n        <br />\n        <p>Select your picture</p>\n        <input\n          type='file'\n          onChange={(e) => setMainPicture(e.target.files[0])}\n        />\n        <br />\n        <input type='submit' value='Create Your Avatar' />\n        <p>how does it work ?</p>\n      </form>\n      <Link to='/board'>Join</Link>\n    </div>\n  );\n};\n\nexport default Upload;\n","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Home/Background.js",[],"/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Home/Modal.js",[],"/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Board/Page.js",[],"/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Home/SoundEffectContext.js",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":3,"column":8,"nodeType":"70","messageId":"71","endLine":3,"endColumn":14},{"ruleId":"68","severity":1,"message":"72","line":171,"column":18,"nodeType":"70","messageId":"71","endLine":171,"endColumn":26},{"ruleId":"68","severity":1,"message":"73","line":172,"column":17,"nodeType":"70","messageId":"71","endLine":172,"endColumn":25},{"ruleId":"68","severity":1,"message":"74","line":175,"column":10,"nodeType":"70","messageId":"71","endLine":175,"endColumn":16},{"ruleId":"68","severity":1,"message":"69","line":2,"column":8,"nodeType":"70","messageId":"71","endLine":2,"endColumn":14},{"ruleId":"68","severity":1,"message":"75","line":7,"column":11,"nodeType":"70","messageId":"71","endLine":7,"endColumn":16},{"ruleId":"68","severity":1,"message":"72","line":7,"column":18,"nodeType":"70","messageId":"71","endLine":7,"endColumn":26},{"ruleId":"68","severity":1,"message":"75","line":12,"column":11,"nodeType":"70","messageId":"71","endLine":12,"endColumn":16},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-unused-vars","'avatar' is defined but never used.","Identifier","unusedVar","'setUsers' is assigned a value but never used.","'setBoard' is assigned a value but never used.","'userID' is assigned a value but never used.","'users' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]