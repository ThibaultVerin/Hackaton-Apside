[{"/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/index.js":"1","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/reportWebVitals.js":"2","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/App.js":"3","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Home/Home.js":"4","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Board/Board.js":"5","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Home/Upload.js":"6","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Board/Cell.js":"7"},{"size":500,"mtime":1610539040016,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1610539040017,"results":"10","hashOfConfig":"9"},{"size":250,"mtime":1610616154185,"results":"11","hashOfConfig":"9"},{"size":184,"mtime":1610580440714,"results":"12","hashOfConfig":"9"},{"size":1791,"mtime":1610616154186,"results":"13","hashOfConfig":"9"},{"size":1379,"mtime":1610616154190,"results":"14","hashOfConfig":"9"},{"size":653,"mtime":1610616154189,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1ialoog",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/index.js",[],["32","33"],"/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/reportWebVitals.js",[],"/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/App.js",["34"],"/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Home/Home.js",[],"/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Board/Board.js",["35","36"],"import React, { useState } from 'react';\nimport './Board.scss';\nimport Cell from './Cell';\n\nexport const createEmptyBoard = () => {\n  const BOARD_SIZE = 10;\n  const board = new Array(BOARD_SIZE);\n\n  for (let x = 0; x < BOARD_SIZE; x++) {\n    board[x] = new Array(BOARD_SIZE);\n    for (let y = 0; y < BOARD_SIZE; y++) {\n      board[x][y] = {\n        x,\n        y,\n        isPeople: false,\n        isWall: false,\n      };\n    }\n  }\n  return board;\n};\n\nexport const drawBoard = (board) => {\n  return board.map((row) => {\n    return row.map((cell, index) => {\n      return (\n        <Cell\n          key={index}\n          cellStyle={cell.isWall ? 'wall' : 'cell'}\n          isPlayer={cell.isPeople}\n          cell={cell}\n        />\n      );\n    });\n  });\n};\n\nexport const populateWithWall = (board, wall) => {\n  board.forEach((row) => {\n    row.forEach((cell) => {\n      wall.forEach((wCell) => {\n        if (wCell.x === cell.x && wCell.y === cell.y) {\n          return (cell.isWall = true);\n        }\n      });\n    });\n  });\n};\nexport const populateWithPeople = (board, people) => {\n  board.forEach((row) => {\n    row.forEach((cell) => {\n      people.forEach((p) => {\n        if (p.x === cell.x && p.y === cell.y) {\n          return (cell.isPeople = true);\n        }\n      });\n    });\n  });\n};\n\nexport const createBoard = (wall, people) => {\n  const b = createEmptyBoard();\n  populateWithWall(b, wall);\n  populateWithPeople(b, people);\n  return b;\n};\n\nexport const wall = [\n  { x: 0, y: 4 },\n  { x: 1, y: 4 },\n];\n\nconst Board = () => {\n  const [users, setUsers] = useState([{ x: 0, y: 1 }]);\n  const [board, setBoard] = useState(createBoard(wall, users));\n  console.log(board);\n  console.log(users);\n\n  return <div className='board-container'>{drawBoard(board)}</div>;\n};\n\nexport default Board;\n","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Home/Upload.js",[],"/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Board/Cell.js",["37","38"],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":4,"column":8,"nodeType":"45","messageId":"46","endLine":4,"endColumn":12},{"ruleId":"43","severity":1,"message":"47","line":74,"column":17,"nodeType":"45","messageId":"46","endLine":74,"endColumn":25},{"ruleId":"43","severity":1,"message":"48","line":75,"column":17,"nodeType":"45","messageId":"46","endLine":75,"endColumn":25},{"ruleId":"43","severity":1,"message":"49","line":5,"column":32,"nodeType":"45","messageId":"46","endLine":5,"endColumn":36},{"ruleId":"43","severity":1,"message":"50","line":6,"column":20,"nodeType":"45","messageId":"46","endLine":6,"endColumn":31},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-unused-vars","'Home' is defined but never used.","Identifier","unusedVar","'setUsers' is assigned a value but never used.","'setBoard' is assigned a value but never used.","'cell' is assigned a value but never used.","'setPosition' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]