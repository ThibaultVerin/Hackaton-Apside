[{"/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/index.js":"1","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/App.js":"2","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/reportWebVitals.js":"3","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Home/Home.js":"4","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/context/UserContext.js":"5","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Board/Board.js":"6","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Board/Cell.js":"7","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Home/Upload.js":"8","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Home/Background.js":"9","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Home/Modal.js":"10","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Home/SoundEffectContext.js":"11","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Action/Action.js":"12","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Shifoumi/Play.js":"13","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/CurrentUser/CurrentUser.js":"14","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/component/home/Chat.js":"15"},{"size":449,"mtime":1610654212582,"results":"16","hashOfConfig":"17"},{"size":786,"mtime":1610708696010,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1610642516802,"results":"19","hashOfConfig":"17"},{"size":402,"mtime":1610658764057,"results":"20","hashOfConfig":"17"},{"size":1043,"mtime":1610708696018,"results":"21","hashOfConfig":"17"},{"size":6540,"mtime":1610708696015,"results":"22","hashOfConfig":"17"},{"size":1357,"mtime":1610708696016,"results":"23","hashOfConfig":"17"},{"size":3296,"mtime":1610704904466,"results":"24","hashOfConfig":"17"},{"size":239,"mtime":1610654212580,"results":"25","hashOfConfig":"17"},{"size":412,"mtime":1610642569195,"results":"26","hashOfConfig":"17"},{"size":478,"mtime":1610658764061,"results":"27","hashOfConfig":"17"},{"size":2467,"mtime":1610709565146,"results":"28","hashOfConfig":"17"},{"size":6083,"mtime":1610709826095,"results":"29","hashOfConfig":"17"},{"size":902,"mtime":1610709565148,"results":"30","hashOfConfig":"17"},{"size":1622,"mtime":1610708696012,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1ialoog",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"34"},"/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/index.js",[],["69","70"],"/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/App.js",[],"/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/reportWebVitals.js",[],"/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Home/Home.js",[],"/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/context/UserContext.js",[],"/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Board/Board.js",["71","72","73"],"import React, { useState, useContext, useEffect, useRef } from 'react';\nimport './Board.scss';\nimport avatar from '../../avatar.jpeg';\nimport io from 'socket.io-client';\nimport uuid from 'react-uuid';\nimport Cell from './Cell';\nimport Background from '../Home/Background';\nimport Action from '../Action/Action';\n\nimport { UserContext } from '../../context/UserContext';\nimport CurrentUser from '../CurrentUser/CurrentUser';\n// import Action from '../Action/Action';\n\nexport const createEmptyBoard = () => {\n  const BOARD_SIZE = 10;\n  const board = new Array(BOARD_SIZE);\n\n  for (let x = 0; x < BOARD_SIZE; x++) {\n    board[x] = new Array(BOARD_SIZE);\n    for (let y = 0; y < BOARD_SIZE; y++) {\n      board[x][y] = {\n        x,\n        y,\n        isPeople: false,\n        isWall: false,\n        isCoffee: false,\n        isComputer: false,\n        isDesk: false,\n        isTree: false,\n      };\n    }\n  }\n  return board;\n};\nexport const handleClassname = (cell) => {\n  if (cell.isWall === true) {\n    return 'wall';\n  } else if (cell.isCoffee === true) {\n    return 'coffee';\n  } else if (cell.isComputer === true) {\n    return 'computer';\n  } else if (cell.isDesk === true) {\n    return 'desk';\n  } else if (cell.isTree === true) {\n    return 'tree';\n  } else {\n    return 'cell';\n  }\n};\n\nexport const drawBoard = (board, user) => {\n  return board.map((row) => {\n    return row.map((cell, index) => {\n      return (\n        <Cell\n          key={index}\n          cellStyle={cell.isWall ? 'wall' : 'cell'}\n          isPlayer={cell.isPeople}\n          cell={cell}\n          // handleClassname={handleClassname}\n        />\n      );\n    });\n  });\n};\nexport const populateWithTree = (board, tree) => {\n  board.forEach((row) => {\n    row.forEach((cell) => {\n      tree.forEach((wCell) => {\n        if (wCell.x === cell.x && wCell.y === cell.y) {\n          return (cell.isTree = true);\n        }\n      });\n    });\n  });\n};\nexport const populateWithDesk = (board, desk) => {\n  board.forEach((row) => {\n    row.forEach((cell) => {\n      desk.forEach((wCell) => {\n        if (wCell.x === cell.x && wCell.y === cell.y) {\n          return (cell.isDesk = true);\n        }\n      });\n    });\n  });\n};\nexport const populateWithComputer = (board, computer) => {\n  board.forEach((row) => {\n    row.forEach((cell) => {\n      computer.forEach((wCell) => {\n        if (wCell.x === cell.x && wCell.y === cell.y) {\n          return (cell.isComputer = true);\n        }\n      });\n    });\n  });\n};\nexport const populateWithCoffee = (board, coffee) => {\n  board.forEach((row) => {\n    row.forEach((cell) => {\n      coffee.forEach((wCell) => {\n        if (wCell.x === cell.x && wCell.y === cell.y) {\n          return (cell.isCoffee = true);\n        }\n      });\n    });\n  });\n};\nexport const populateWithWall = (board, wall) => {\n  board.forEach((row) => {\n    row.forEach((cell) => {\n      wall.forEach((wCell) => {\n        if (wCell.x === cell.x && wCell.y === cell.y) {\n          return (cell.isWall = true);\n        }\n      });\n    });\n  });\n};\nexport const populateWithPeople = (board, people) => {\n  if (people) {\n    board.forEach((row) => {\n      row.forEach((cell) => {\n        people.forEach((p) => {\n          if (cell && p) {\n            if (p.x === cell.x && p.y === cell.y) {\n              cell.isPeople = true;\n              cell.avatar = p.avatar;\n              cell.user = p;\n              return cell;\n            }\n          }\n        });\n      });\n    });\n  }\n};\nexport const createBoard = (tree, desk, computer, coffee, wall, people) => {\n  const b = createEmptyBoard();\n  populateWithTree(b, tree);\n  populateWithDesk(b, desk);\n  populateWithComputer(b, computer);\n  populateWithCoffee(b, coffee);\n  populateWithWall(b, wall);\n  populateWithPeople(b, people);\n  return b;\n};\n\nexport const wall = [\n  { x: 0, y: 6 },\n  { x: 1, y: 6 },\n  { x: 3, y: 6 },\n  { x: 3, y: 7 },\n  { x: 3, y: 8 },\n  { x: 3, y: 9 },\n  { x: 2, y: 0 },\n  { x: 2, y: 1 },\n  { x: 2, y: 2 },\n  { x: 2, y: 3 },\n  { x: 3, y: 3 },\n  { x: 4, y: 3 },\n  { x: 7, y: 5 },\n  { x: 8, y: 5 },\n  { x: 9, y: 5 },\n];\n\nexport const coffee = [{ x: 3, y: 1 }];\n\nexport const computer = [{ x: 0, y: 8 }];\nexport const desk = [\n  { x: 7, y: 1 },\n  { x: 7, y: 3 },\n  { x: 9, y: 1 },\n  { x: 9, y: 3 },\n];\n\nexport const tree = [\n  { x: 0, y: 5 },\n  { x: 4, y: 9 },\n  { x: 7, y: 6 },\n  { x: 8, y: 9 },\n  { x: 9, y: 7 },\n];\n\nexport const shootPlayer = () => {};\n\nconst Board = () => {\n  const {\n    users,\n    setUsers,\n    currentUser,\n    setCurrentUser,\n    isActionOpen,\n    setIsActionopen,\n    socket,\n  } = useContext(UserContext);\n\n  const initialBoard = createBoard(tree, desk, computer, coffee, wall, users);\n\n  const [board, setBoard] = useState(initialBoard);\n  const [userID, setUserID] = useState();\n  const socketRef = useRef();\n  useEffect(() => {\n    const newBoard = createBoard(tree, desk, computer, coffee, wall, users);\n    setBoard(newBoard);\n  }, [users]);\n\n  // const socketRef = useRef();\n  // socket = io.connect('/');\n\n  useEffect(() => {\n    let usersRegistered = [];\n    socket.emit('sendCurrentUser', currentUser);\n\n    socket.on('connect', () => {});\n\n    socket.on('sendNewUser', (newUser) => {\n      const userAlreadyExist = usersRegistered.some(\n        (user) => user.id === newUser.id\n      );\n\n      if (!userAlreadyExist) {\n        usersRegistered.push(newUser);\n        setUsers((prevState) => [...prevState, newUser]);\n      }\n      socket.emit('clientSendFirstUser', currentUser);\n    });\n\n    socket.on('serverSendFirstUser', (newUser) => {\n      const userAlreadyExist = usersRegistered.some(\n        (user) => user.id === newUser.id\n      );\n\n      if (!userAlreadyExist) {\n        usersRegistered.push(newUser);\n        setUsers((prevState) => [...prevState, newUser]);\n      }\n    });\n\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n\n  useEffect(() => {\n    socket.on('otherUserMove', (data) => {\n      setUsers((users) => {\n        return [...users.filter((user) => user.id !== data.id), data];\n      });\n      if (data.id === currentUser.id) {\n        setCurrentUser(data);\n      }\n    });\n  }, []);\n\n  return (\n    <div>\n      <Background />\n      <CurrentUser />\n\n      {isActionOpen && <Action />}\n      <div className='board-container'>{drawBoard(board, users)}</div>\n    </div>\n  );\n};\nexport default Board;\n","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Board/Cell.js",["74","75","76","77"],"import React, { useContext, useEffect } from 'react';\nimport { UserContext } from '../../context/UserContext';\nimport { handleClassname, shootPlayer } from './Board';\nimport { useHistory } from 'react-router-dom';\n\nexport default function Cell(props) {\n  const { isPlayer, cell } = props;\n  const {\n    users,\n    setUsers,\n    currentUser,\n    setCurrentUser,\n    isActionOpen,\n    setIsActionOpen,\n    socket,\n    setPlayerShot,\n  } = useContext(UserContext);\n\n  const history = useHistory();\n\n  let newCurrentUser = {};\n\n  const handleClick = (e) => {\n    if (cell.isComputer) {\n      history.push('/game');\n    }\n    if (isPlayer) {\n      setPlayerShot(cell.user);\n\n      setIsActionOpen(true);\n    } else {\n      setIsActionOpen(false);\n\n      if (cell.isPlayer) {\n        console.log(cell.user);\n      } else {\n        const userIndex = users.findIndex((user) => user.id === currentUser.id);\n\n        newCurrentUser = {\n          // eslint-disable-next-line no-restricted-globals\n          name: users[userIndex].name,\n          avatar: users[userIndex].avatar,\n          id: users[userIndex].id,\n          life: users[userIndex].life,\n          nerf: users[userIndex].nerf,\n          x: cell.x,\n          y: cell.y,\n        };\n\n        socket.emit('currentUserMove', newCurrentUser);\n      }\n    }\n  };\n\n  return (\n    <div className={cell && handleClassname(cell)} onClick={handleClick}>\n      {isPlayer && <img src={cell.avatar} alt='avatar' />}\n    </div>\n  );\n}\n","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Home/Upload.js",["78"],"import React, { useState, useContext } from 'react';\n/* import Modal from './Modal'; */\nimport './Upload.scss';\nimport axios from 'axios';\nimport { UserContext } from '../../context/UserContext';\nimport { Link } from 'react-router-dom';\n\nconst Upload = () => {\n  const [title, setTitle] = useState('Enter your Name');\n  const [mainPicture, setMainPicture] = useState(null);\n\n  const { users, setUsers } = useContext(UserContext);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append('title', title);\n    formData.append('main_picture', mainPicture);\n\n    const res = await axios.post(\n      'http://localhost:5000/uploaddufichier',\n      formData\n    );\n    await setUsers([\n      {\n        name: res.data.name,\n        avatar: `http://localhost:5000/${res.data.path}`,\n        x: Math.floor(Math.random() * 10),\n        y: Math.floor(Math.random() * 10),\n      },\n    ]);\n  };\n\n  return (\n    <div>\n      <h2>Welcome On Board !</h2>\n      <form onSubmit={handleSubmit}>\n        <input\n          type='text'\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n        />\n        <br />\n        <p>Select your picture</p>\n        <input\n          type='file'\n          onChange={(e) => setMainPicture(e.target.files[0])}\n        />\n        <br />\n        <input type='submit' value='Create Your Avatar' />\n        <p>how does it work ?</p>\n      </form>\n      <Link to='/board'>Join</Link>\n    </div>\n  );\n};\n\nexport default Upload;\n","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Home/Background.js",[],"/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Home/Modal.js",[],"/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Home/SoundEffectContext.js",[],"/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Action/Action.js",["79","80","81"],"import React, { useContext } from 'react';\nimport { UserContext } from '../../context/UserContext';\nimport './Action.scss';\n\nconst Action = () => {\n  const { users, setUsers, currentUser, setCurrentUser } = useContext(\n    UserContext\n  );\n\n  const handleCoffee = () => {\n    const currentUserTemp = [];\n\n    const userTemp = [];\n    users.forEach((e) => {\n      userTemp.push({ name: e.name, avatar: e.avatar, id: e.id });\n    });\n    userTemp[0].x = 3;\n    userTemp[0].y = 0;\n    userTemp[1].x = 3;\n    userTemp[1].y = 2;\n\n    setUsers(userTemp);\n    console.log(users);\n  };\n\n  return (\n    <div>\n      <h3>Choose Your Action</h3>\n      <div>\n        <div onClick={handleCoffee}>Drink Coffee</div>\n        <div>SHOOT</div>\n        <div>Challenge + name</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Action;\n","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Shifoumi/Play.js",["82","83","84","85","86","87","88","89"],"/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/CurrentUser/CurrentUser.js",["90"],"import React, { useContext } from 'react';\nimport { UserContext } from '../../context/UserContext';\nimport './CurrentUser.scss';\n\nconst CurrentUser = () => {\n  const { currentUser } = useContext(UserContext);\n\n  return (\n    <div className='user-container'>\n      <img src={currentUser.avatar} />\n      <div>\n        <div>{currentUser.name}</div>\n        <div>{currentUser.life}/100</div>\n        <div>{currentUser.nerf} nerfs</div>\n      </div>\n    </div>\n  );\n};\n\nexport default CurrentUser;\n","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/component/home/Chat.js",["91"],"import React, { useState, useEffect, useContext } from 'react';\nimport { UserContext } from '../../context/UserContext';\nimport '../Chat.scss';\n\nconst CoffeeChat = () => {\n  const { currentUser, socket } = useContext(UserContext);\n  const [messageArray, setMessageArray] = useState([]);\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    socket.on('message', (message) => {\n      console.log(message);\n      receivedMessage(message);\n    });\n  }, []);\n\n  const receivedMessage = (message) => {\n    setMessageArray((oldMsgs) => [...oldMsgs, message]);\n  };\n  const sendMessage = (e) => {\n    e.preventDefault();\n    const messageObject = {\n      body: message,\n      name: currentUser.name,\n    };\n    setMessage('');\n    socket.emit('send message', messageObject);\n  };\n\n  const handleChatChange = (e) => {\n    setMessage(e.target.value);\n  };\n  return (\n    <div className='ChatContainer'>\n      <h2 className='title-chat'>Let's chat!</h2>\n      <div className='message-container'>\n        {messageArray.map((message, index) => {\n          return (\n            <div className='user-message'>\n              <p key={index}>\n                {message.name}: {message.body}\n              </p>\n            </div>\n          );\n        })}\n      </div>\n      <div className='textZone'>\n        <form onSubmit={sendMessage}>\n          <textarea\n            onChange={handleChatChange}\n            placeholder='Say something...'\n          />\n          <button className='button-chat' type='submit'>\n            Send\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default CoffeeChat;\n",{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":193,"column":5,"nodeType":"98","messageId":"99","endLine":193,"endColumn":18},{"ruleId":"100","severity":1,"message":"101","line":253,"column":6,"nodeType":"102","endLine":253,"endColumn":8,"suggestions":"103"},{"ruleId":"100","severity":1,"message":"104","line":264,"column":6,"nodeType":"102","endLine":264,"endColumn":8,"suggestions":"105"},{"ruleId":"96","severity":1,"message":"106","line":1,"column":29,"nodeType":"98","messageId":"99","endLine":1,"endColumn":38},{"ruleId":"96","severity":1,"message":"107","line":9,"column":5,"nodeType":"98","messageId":"99","endLine":9,"endColumn":13},{"ruleId":"96","severity":1,"message":"108","line":11,"column":5,"nodeType":"98","messageId":"99","endLine":11,"endColumn":19},{"ruleId":"96","severity":1,"message":"109","line":12,"column":5,"nodeType":"98","messageId":"99","endLine":12,"endColumn":17},{"ruleId":"96","severity":1,"message":"110","line":12,"column":11,"nodeType":"98","messageId":"99","endLine":12,"endColumn":16},{"ruleId":"96","severity":1,"message":"111","line":7,"column":28,"nodeType":"98","messageId":"99","endLine":7,"endColumn":39},{"ruleId":"96","severity":1,"message":"108","line":7,"column":41,"nodeType":"98","messageId":"99","endLine":7,"endColumn":55},{"ruleId":"96","severity":1,"message":"112","line":12,"column":11,"nodeType":"98","messageId":"99","endLine":12,"endColumn":26},{"ruleId":"96","severity":1,"message":"113","line":9,"column":8,"nodeType":"98","messageId":"99","endLine":9,"endColumn":13},{"ruleId":"96","severity":1,"message":"114","line":10,"column":8,"nodeType":"98","messageId":"99","endLine":10,"endColumn":14},{"ruleId":"96","severity":1,"message":"115","line":17,"column":19,"nodeType":"98","messageId":"99","endLine":17,"endColumn":29},{"ruleId":"100","severity":1,"message":"116","line":46,"column":6,"nodeType":"102","endLine":46,"endColumn":8,"suggestions":"117"},{"ruleId":"100","severity":1,"message":"118","line":52,"column":6,"nodeType":"102","endLine":52,"endColumn":20,"suggestions":"119"},{"ruleId":"100","severity":1,"message":"118","line":58,"column":6,"nodeType":"102","endLine":58,"endColumn":21,"suggestions":"120"},{"ruleId":"100","severity":1,"message":"121","line":66,"column":6,"nodeType":"102","endLine":66,"endColumn":38,"suggestions":"122"},{"ruleId":"100","severity":1,"message":"123","line":93,"column":6,"nodeType":"102","endLine":93,"endColumn":36,"suggestions":"124"},{"ruleId":"125","severity":1,"message":"126","line":10,"column":7,"nodeType":"127","endLine":10,"endColumn":39},{"ruleId":"100","severity":1,"message":"118","line":14,"column":6,"nodeType":"102","endLine":14,"endColumn":8,"suggestions":"128"},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],"no-unused-vars","'isCoffeeTaken' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentUser', 'setIsCoffeeTaken', 'setUsers', and 'socket'. Either include them or remove the dependency array.","ArrayExpression",["131"],"React Hook useEffect has missing dependencies: 'currentUser.id', 'setCurrentUser', 'setUsers', and 'socket'. Either include them or remove the dependency array.",["132"],"'useEffect' is defined but never used.","'setUsers' is assigned a value but never used.","'setCurrentUser' is assigned a value but never used.","'isActionOpen' is assigned a value but never used.","'users' is assigned a value but never used.","'currentUser' is assigned a value but never used.","'currentUserTemp' is assigned a value but never used.","'jesus' is defined but never used.","'doctor' is defined but never used.","'setPlayer1' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currentUser' and 'socket'. Either include them or remove the dependency array.",["133"],"React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array.",["134"],["135"],"React Hook useEffect has missing dependencies: 'player1' and 'player2'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setVictorious' needs the current value of 'player1'.",["136"],"React Hook useEffect has a missing dependency: 'comparePick'. Either include it or remove the dependency array.",["137"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["138"],"no-global-assign","no-unsafe-negation",{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},"Update the dependencies array to be: [currentUser, setIsCoffeeTaken, setUsers, socket]",{"range":"155","text":"156"},"Update the dependencies array to be: [currentUser.id, setCurrentUser, setUsers, socket]",{"range":"157","text":"158"},"Update the dependencies array to be: [currentUser, socket]",{"range":"159","text":"160"},"Update the dependencies array to be: [playerChoice, socket]",{"range":"161","text":"162"},"Update the dependencies array to be: [playerCounter, socket]",{"range":"163","text":"164"},"Update the dependencies array to be: [playerCounter, computerCounter, player1, player2]",{"range":"165","text":"166"},"Update the dependencies array to be: [playerChoice, computerChoice, comparePick]",{"range":"167","text":"168"},"Update the dependencies array to be: [socket]",{"range":"169","text":"170"},[6031,6033],"[currentUser, setIsCoffeeTaken, setUsers, socket]",[6300,6302],"[currentUser.id, setCurrentUser, setUsers, socket]",[1587,1589],"[currentUser, socket]",[1698,1712],"[playerChoice, socket]",[1822,1837],"[playerCounter, socket]",[2003,2035],"[playerCounter, computerCounter, player1, player2]",[2735,2765],"[playerChoice, computerChoice, comparePick]",[466,468],"[socket]"]