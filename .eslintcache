[{"/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/index.js":"1","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/App.js":"2","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/reportWebVitals.js":"3","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Home/Home.js":"4","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/context/UserContext.js":"5","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Board/Board.js":"6","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Board/Cell.js":"7","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Home/Upload.js":"8","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Home/Background.js":"9","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Home/Modal.js":"10","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Home/SoundEffectContext.js":"11","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Action/Action.js":"12","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Shifoumi/Play.js":"13","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/CurrentUser/CurrentUser.js":"14","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/component/home/Chat.js":"15"},{"size":449,"mtime":1610654212582,"results":"16","hashOfConfig":"17"},{"size":786,"mtime":1610708275996,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1610642516802,"results":"19","hashOfConfig":"17"},{"size":402,"mtime":1610658764057,"results":"20","hashOfConfig":"17"},{"size":1043,"mtime":1610708276005,"results":"21","hashOfConfig":"17"},{"size":6540,"mtime":1610708300376,"results":"22","hashOfConfig":"17"},{"size":1357,"mtime":1610708300377,"results":"23","hashOfConfig":"17"},{"size":3296,"mtime":1610704904466,"results":"24","hashOfConfig":"17"},{"size":239,"mtime":1610654212580,"results":"25","hashOfConfig":"17"},{"size":412,"mtime":1610642569195,"results":"26","hashOfConfig":"17"},{"size":478,"mtime":1610658764061,"results":"27","hashOfConfig":"17"},{"size":2467,"mtime":1610708300376,"results":"28","hashOfConfig":"17"},{"size":6413,"mtime":1610708276003,"results":"29","hashOfConfig":"17"},{"size":494,"mtime":1610704904464,"results":"30","hashOfConfig":"17"},{"size":1622,"mtime":1610708300375,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1ialoog",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/index.js",[],["68","69"],"/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/App.js",[],"/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/reportWebVitals.js",[],"/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Home/Home.js",[],"/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/context/UserContext.js",[],"/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Board/Board.js",["70","71","72"],"/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Board/Cell.js",["73","74","75","76"],"import React, { useContext, useEffect } from 'react';\nimport { UserContext } from '../../context/UserContext';\nimport { handleClassname, shootPlayer } from './Board';\nimport { useHistory } from 'react-router-dom';\n\nexport default function Cell(props) {\n  const { isPlayer, cell } = props;\n  const {\n    users,\n    setUsers,\n    currentUser,\n    setCurrentUser,\n    isActionOpen,\n    setIsActionOpen,\n    socket,\n    setPlayerShot,\n  } = useContext(UserContext);\n\n  const history = useHistory();\n\n  let newCurrentUser = {};\n\n  const handleClick = (e) => {\n    if (cell.isComputer) {\n      history.push('/game');\n    }\n    if (isPlayer) {\n      setPlayerShot(cell.user);\n\n      setIsActionOpen(true);\n    } else {\n      setIsActionOpen(false);\n\n      if (cell.isPlayer) {\n        console.log(cell.user);\n      } else {\n        const userIndex = users.findIndex((user) => user.id === currentUser.id);\n\n        newCurrentUser = {\n          // eslint-disable-next-line no-restricted-globals\n          name: users[userIndex].name,\n          avatar: users[userIndex].avatar,\n          id: users[userIndex].id,\n          life: users[userIndex].life,\n          nerf: users[userIndex].nerf,\n          x: cell.x,\n          y: cell.y,\n        };\n\n        socket.emit('currentUserMove', newCurrentUser);\n      }\n    }\n  };\n\n  return (\n    <div className={cell && handleClassname(cell)} onClick={handleClick}>\n      {isPlayer && <img src={cell.avatar} alt='avatar' />}\n    </div>\n  );\n}\n","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Home/Upload.js",["77"],"import React, { useState, useContext } from 'react';\n/* import Modal from './Modal'; */\nimport './Upload.scss';\nimport axios from 'axios';\nimport { UserContext } from '../../context/UserContext';\nimport { Link } from 'react-router-dom';\n\nconst Upload = () => {\n  const [title, setTitle] = useState('Enter your Name');\n  const [mainPicture, setMainPicture] = useState(null);\n\n  const { users, setUsers } = useContext(UserContext);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append('title', title);\n    formData.append('main_picture', mainPicture);\n\n    const res = await axios.post(\n      'http://localhost:5000/uploaddufichier',\n      formData\n    );\n    await setUsers([\n      {\n        name: res.data.name,\n        avatar: `http://localhost:5000/${res.data.path}`,\n        x: Math.floor(Math.random() * 10),\n        y: Math.floor(Math.random() * 10),\n      },\n    ]);\n  };\n\n  return (\n    <div>\n      <h2>Welcome On Board !</h2>\n      <form onSubmit={handleSubmit}>\n        <input\n          type='text'\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n        />\n        <br />\n        <p>Select your picture</p>\n        <input\n          type='file'\n          onChange={(e) => setMainPicture(e.target.files[0])}\n        />\n        <br />\n        <input type='submit' value='Create Your Avatar' />\n        <p>how does it work ?</p>\n      </form>\n      <Link to='/board'>Join</Link>\n    </div>\n  );\n};\n\nexport default Upload;\n","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Home/Background.js",[],"/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Home/Modal.js",[],"/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Home/SoundEffectContext.js",[],"/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Action/Action.js",["78","79","80"],"import React, { useContext } from 'react';\nimport { UserContext } from '../../context/UserContext';\nimport './Action.scss';\n\nconst Action = () => {\n  const { users, setUsers, currentUser, setCurrentUser } = useContext(\n    UserContext\n  );\n\n  const handleCoffee = () => {\n    const currentUserTemp = [];\n\n    const userTemp = [];\n    users.forEach((e) => {\n      userTemp.push({ name: e.name, avatar: e.avatar, id: e.id });\n    });\n    userTemp[0].x = 3;\n    userTemp[0].y = 0;\n    userTemp[1].x = 3;\n    userTemp[1].y = 2;\n\n    setUsers(userTemp);\n    console.log(users);\n  };\n\n  return (\n    <div>\n      <h3>Choose Your Action</h3>\n      <div>\n        <div onClick={handleCoffee}>Drink Coffee</div>\n        <div>SHOOT</div>\n        <div>Challenge + name</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Action;\n","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/Shifoumi/Play.js",["81","82","83","84","85","86","87","88"],"import React, { useState, useEffect, useContext } from 'react';\nimport './Play.css';\nimport paper from './Images/paper.png';\nimport cisors from './Images/cisors.png';\nimport rock from './Images/rock.png';\nimport paperReverse from './Images/paperReverse.png';\nimport cisorsReverse from './Images/cisorsReverse.png';\nimport rockReverse from './Images/rockReverse.png';\nimport jesus from './Images/jesus.jpg';\nimport doctor from './Images/doctor.jpg';\nimport { UserContext } from '../../context/UserContext';\nimport { Link } from 'react-router-dom';\n\nconst Play = () => {\n  const { socket, currentUser } = useContext(UserContext);\n\n  const [player1, setPlayer1] = useState(currentUser);\n  const [player2, setPlayer2] = useState();\n  const [playerChoice, setPlayerChoice] = useState(null);\n  const [computerChoice, setComputerChoice] = useState(null);\n  const [isWinner, setIsWinner] = useState('');\n  const [playerCounter, setPlayerCounter] = useState(0);\n  const [computerCounter, setComputerCounter] = useState(0);\n  const [victorious, setVictorious] = useState();\n\n  useEffect(() => {\n    socket.emit('joinShifoumi', 'room1');\n    socket.emit('notification', `${currentUser.name} is playing Shi Fu Mi `);\n\n    socket.on('welcome', (data) => {\n      console.log(data);\n      socket.emit('userJoin', currentUser);\n    });\n\n    socket.on('player2', (player2) => {\n      setPlayer2(player2);\n    });\n\n    socket.on('player2Choice', (player2Choice) => {\n      setComputerChoice(player2Choice);\n    });\n\n    socket.on('player2Score', (score) => {\n      setComputerCounter(score);\n    });\n  }, []);\n\n  useEffect(() => {\n    if (playerChoice) {\n      socket.emit('player1Choice', playerChoice);\n    }\n  }, [playerChoice]);\n\n  useEffect(() => {\n    if (playerCounter) {\n      socket.emit('player1Score', playerCounter);\n    }\n  }, [playerCounter]);\n\n  useEffect(() => {\n    if (playerCounter === 3) {\n      setVictorious(player1);\n    } else if (computerCounter === 3) {\n      setVictorious(player2);\n    }\n  }, [playerCounter, computerCounter]);\n\n  const comparePick = () => {\n    if (playerChoice === computerChoice) {\n      setIsWinner('Draw');\n      console.log('Draw');\n    } else if (\n      (playerChoice === 1 && computerChoice === 3) ||\n      (playerChoice === 2 && computerChoice === 1) ||\n      (playerChoice === 3 && computerChoice === 2)\n    ) {\n      setIsWinner('You win');\n      setPlayerCounter(playerCounter + 1);\n      console.log('You win');\n    } else {\n      setIsWinner('You loose');\n      //   setComputerCounter(computerCounter + 1);\n      console.log('You loose');\n    }\n    setPlayerChoice();\n    setComputerChoice();\n  };\n\n  useEffect(() => {\n    if (playerChoice && computerChoice) {\n      comparePick();\n    }\n  }, [playerChoice, computerChoice]);\n\n  const showWinner = () => {\n    if (!victorious) {\n      return (\n        <div className='playBody'>\n          <h1>Challenge me if you dare !</h1>\n          <h2>{isWinner}</h2>\n          <div className='playPart'>\n            <div className='playerChoice'>\n              <img\n                src={paper}\n                alt={paper}\n                className='playerWeapon'\n                onClick={() => {\n                  setPlayerChoice(1);\n                }}\n              />\n              <img\n                src={cisors}\n                alt={cisors}\n                onClick={() => {\n                  setPlayerChoice(2);\n                }}\n              />\n              <img\n                src={rock}\n                alt={rock}\n                onClick={() => {\n                  setPlayerChoice(3);\n                }}\n              />\n            </div>\n            <img\n              src={player1.avatar}\n              alt={player1.name}\n              className='avatarimg'\n              style={{\n                width: 150,\n                height: 150,\n                position: 'absolute',\n                left: 150,\n                bottom: 100,\n                borderRadius: '50%',\n              }}\n            />\n            <div className='scorePartDoctor'>\n              <p>{player1 && player1.name}</p>\n              <h2>Score : {playerCounter}</h2>\n            </div>\n            <div className='computerChoice'>\n              <img src={paperReverse} alt={paperReverse} />\n              <img src={cisorsReverse} alt={cisorsReverse} />\n              <img src={rockReverse} alt={rockReverse} />\n            </div>\n            <img\n              src={player2 && player2.avatar}\n              alt={player2 && player2.name}\n              style={{\n                width: 150,\n                height: 150,\n                position: 'absolute',\n                right: 150,\n                bottom: 100,\n                borderRadius: '50%',\n              }}\n            />\n            <div className='scorePartJesus'>\n              <p>{player2 && player2.name}</p>\n\n              <h2>Score : {computerCounter}</h2>\n            </div>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <img\n            src={doctor}\n            alt='aa'\n            style={{\n              width: 300,\n              height: 400,\n              position: 'absolute',\n              right: 50,\n              bottom: 150,\n              borderRadius: 20,\n            }}\n          />\n          {/* {victorious.name} */}\n          Player 1 won the game !\n          <div>\n            <input type='button' value='Play again' onClick={reset} />\n            <Link to={'/board'}>Back</Link>\n          </div>\n        </div>\n      );\n    }\n  };\n\n  const reset = () => {\n    setVictorious();\n    setPlayerCounter(0);\n    setComputerCounter(0);\n  };\n\n  return <>{showWinner()}</>;\n};\n\nexport default Play;\n\n// Step 1 : Reconnaitre le click:\n// -> creation state choix du player\n// -> onClick={() => setPlayerChoice()} pour mettre à jour le state.\n\n// Step 2 : Au click donner un state d'une valeur aléatoire pour l'ordi\n// -> creer state computer\n// -> creer un random number entre 0 et 2 pour le choix de l'ordi --> console.log en premier puis mettre à jour le state.\n// -> Math.floor(Math.random() * Math.floor(3))\n\n// Step 3 : définir en fonction des 2 states liés aux choix\n// -> création d'un state isWinner pour savoir si l'utilisateur gagne\n// -> création conditions\n\n// Step 4 : créer counter:\n// -> creer state pour player et computer\n// -> incrémente de 1 dans les conditions\n// -> affichage h2 dans le return\n","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/components/CurrentUser/CurrentUser.js",["89"],"import React, { useContext } from 'react';\nimport { UserContext } from '../../context/UserContext';\nimport './CurrentUser.scss';\n\nconst CurrentUser = () => {\n  const { currentUser } = useContext(UserContext);\n\n  return (\n    <div className='user-container'>\n      <img src={currentUser.avatar} />\n      <div>\n        <div>{currentUser.name}</div>\n        <div>{currentUser.life}/100</div>\n        <div>{currentUser.nerf} nerfs</div>\n      </div>\n    </div>\n  );\n};\n\nexport default CurrentUser;\n","/Users/laurenceportron/Documents/hackathon/Hackaton-Apside/src/component/home/Chat.js",["90"],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":193,"column":5,"nodeType":"97","messageId":"98","endLine":193,"endColumn":18},{"ruleId":"99","severity":1,"message":"100","line":253,"column":6,"nodeType":"101","endLine":253,"endColumn":8,"suggestions":"102"},{"ruleId":"99","severity":1,"message":"103","line":264,"column":6,"nodeType":"101","endLine":264,"endColumn":8,"suggestions":"104"},{"ruleId":"95","severity":1,"message":"105","line":1,"column":29,"nodeType":"97","messageId":"98","endLine":1,"endColumn":38},{"ruleId":"95","severity":1,"message":"106","line":9,"column":5,"nodeType":"97","messageId":"98","endLine":9,"endColumn":13},{"ruleId":"95","severity":1,"message":"107","line":11,"column":5,"nodeType":"97","messageId":"98","endLine":11,"endColumn":19},{"ruleId":"95","severity":1,"message":"108","line":12,"column":5,"nodeType":"97","messageId":"98","endLine":12,"endColumn":17},{"ruleId":"95","severity":1,"message":"109","line":12,"column":11,"nodeType":"97","messageId":"98","endLine":12,"endColumn":16},{"ruleId":"95","severity":1,"message":"110","line":7,"column":28,"nodeType":"97","messageId":"98","endLine":7,"endColumn":39},{"ruleId":"95","severity":1,"message":"107","line":7,"column":41,"nodeType":"97","messageId":"98","endLine":7,"endColumn":55},{"ruleId":"95","severity":1,"message":"111","line":12,"column":11,"nodeType":"97","messageId":"98","endLine":12,"endColumn":26},{"ruleId":"95","severity":1,"message":"112","line":9,"column":8,"nodeType":"97","messageId":"98","endLine":9,"endColumn":13},{"ruleId":"95","severity":1,"message":"113","line":10,"column":8,"nodeType":"97","messageId":"98","endLine":10,"endColumn":14},{"ruleId":"95","severity":1,"message":"114","line":17,"column":19,"nodeType":"97","messageId":"98","endLine":17,"endColumn":29},{"ruleId":"99","severity":1,"message":"115","line":45,"column":6,"nodeType":"101","endLine":45,"endColumn":8,"suggestions":"116"},{"ruleId":"99","severity":1,"message":"117","line":51,"column":6,"nodeType":"101","endLine":51,"endColumn":20,"suggestions":"118"},{"ruleId":"99","severity":1,"message":"117","line":57,"column":6,"nodeType":"101","endLine":57,"endColumn":21,"suggestions":"119"},{"ruleId":"99","severity":1,"message":"120","line":65,"column":6,"nodeType":"101","endLine":65,"endColumn":38,"suggestions":"121"},{"ruleId":"99","severity":1,"message":"122","line":92,"column":6,"nodeType":"101","endLine":92,"endColumn":36,"suggestions":"123"},{"ruleId":"124","severity":1,"message":"125","line":10,"column":7,"nodeType":"126","endLine":10,"endColumn":39},{"ruleId":"99","severity":1,"message":"117","line":14,"column":6,"nodeType":"101","endLine":14,"endColumn":8,"suggestions":"127"},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"no-unused-vars","'isCoffeeTaken' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentUser', 'setIsCoffeeTaken', 'setUsers', and 'socket'. Either include them or remove the dependency array.","ArrayExpression",["130"],"React Hook useEffect has missing dependencies: 'currentUser.id', 'setCurrentUser', 'setUsers', and 'socket'. Either include them or remove the dependency array.",["131"],"'useEffect' is defined but never used.","'setUsers' is assigned a value but never used.","'setCurrentUser' is assigned a value but never used.","'isActionOpen' is assigned a value but never used.","'users' is assigned a value but never used.","'currentUser' is assigned a value but never used.","'currentUserTemp' is assigned a value but never used.","'jesus' is defined but never used.","'doctor' is defined but never used.","'setPlayer1' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currentUser' and 'socket'. Either include them or remove the dependency array.",["132"],"React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array.",["133"],["134"],"React Hook useEffect has missing dependencies: 'player1' and 'player2'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setVictorious' needs the current value of 'player1'.",["135"],"React Hook useEffect has a missing dependency: 'comparePick'. Either include it or remove the dependency array.",["136"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["137"],"no-global-assign","no-unsafe-negation",{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},"Update the dependencies array to be: [currentUser, setIsCoffeeTaken, setUsers, socket]",{"range":"154","text":"155"},"Update the dependencies array to be: [currentUser.id, setCurrentUser, setUsers, socket]",{"range":"156","text":"157"},"Update the dependencies array to be: [currentUser, socket]",{"range":"158","text":"159"},"Update the dependencies array to be: [playerChoice, socket]",{"range":"160","text":"161"},"Update the dependencies array to be: [playerCounter, socket]",{"range":"162","text":"163"},"Update the dependencies array to be: [playerCounter, computerCounter, player1, player2]",{"range":"164","text":"165"},"Update the dependencies array to be: [playerChoice, computerChoice, comparePick]",{"range":"166","text":"167"},"Update the dependencies array to be: [socket]",{"range":"168","text":"169"},[6031,6033],"[currentUser, setIsCoffeeTaken, setUsers, socket]",[6300,6302],"[currentUser.id, setCurrentUser, setUsers, socket]",[1509,1511],"[currentUser, socket]",[1620,1634],"[playerChoice, socket]",[1744,1759],"[playerCounter, socket]",[1925,1957],"[playerCounter, computerCounter, player1, player2]",[2657,2687],"[playerChoice, computerChoice, comparePick]",[466,468],"[socket]"]