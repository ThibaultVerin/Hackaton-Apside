[{"/Users/jean/Desktop/hackaton/client/src/index.js":"1","/Users/jean/Desktop/hackaton/client/src/reportWebVitals.js":"2","/Users/jean/Desktop/hackaton/client/src/App.js":"3","/Users/jean/Desktop/hackaton/client/src/components/Home/Home.js":"4","/Users/jean/Desktop/hackaton/client/src/context/UserContext.js":"5","/Users/jean/Desktop/hackaton/client/src/components/Board/Board.js":"6","/Users/jean/Desktop/hackaton/client/src/components/Home/Upload.js":"7","/Users/jean/Desktop/hackaton/client/src/components/Board/Cell.js":"8"},{"size":500,"mtime":1610631742663,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1610539097195,"results":"11","hashOfConfig":"10"},{"size":670,"mtime":1610622987154,"results":"12","hashOfConfig":"10"},{"size":184,"mtime":1610566244855,"results":"13","hashOfConfig":"10"},{"size":349,"mtime":1610570432459,"results":"14","hashOfConfig":"10"},{"size":2876,"mtime":1610631742620,"results":"15","hashOfConfig":"10"},{"size":1474,"mtime":1610631742634,"results":"16","hashOfConfig":"10"},{"size":813,"mtime":1610631742634,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ws952",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},"/Users/jean/Desktop/hackaton/client/src/index.js",[],"/Users/jean/Desktop/hackaton/client/src/reportWebVitals.js",[],["38","39"],"/Users/jean/Desktop/hackaton/client/src/App.js",[],"/Users/jean/Desktop/hackaton/client/src/components/Home/Home.js",[],"/Users/jean/Desktop/hackaton/client/src/context/UserContext.js",[],"/Users/jean/Desktop/hackaton/client/src/components/Board/Board.js",["40","41","42","43"],"import Cell from './Cell';\nimport React, { useState, useContext, useEffect, useRef } from 'react';\nimport './Board.scss';\nimport avatar from '../../avatar.jpeg';\nimport io from 'socket.io-client';\n\nimport { UserContext } from '../../context/UserContext';\n\nexport const createEmptyBoard = () => {\n  const BOARD_SIZE = 15;\n  const board = new Array(BOARD_SIZE);\n\n  for (let x = 0; x < BOARD_SIZE; x++) {\n    board[x] = new Array(10);\n    for (let y = 0; y < 10; y++) {\n      board[x][y] = {\n        x,\n        y,\n        isPeople: false,\n        isWall: false,\n        isCoffee: false,\n      };\n    }\n  }\n  return board;\n};\n\nexport const drawBoard = (board, user) => {\n  return board.map((row) => {\n    return row.map((cell, index) => {\n      return (\n        <Cell\n          key={index}\n          cellStyle={cell.isWall ? 'wall' : 'cell'}\n          isPlayer={cell.isPeople}\n          cell={cell}\n        />\n      );\n      // return user.map((u) => {\n      //   return (\n      //     <div key={index} className={cell.isWall ? 'wall' : 'cell'}>\n      //       {cell.isPeople && <img src={u.avatar} alt='avatar' />}\n      //     </div>\n      //   );\n      // });\n    });\n  });\n};\n\nexport const populateWithWall = (board, wall) => {\n  board.forEach((row) => {\n    row.forEach((cell) => {\n      wall.forEach((wCell) => {\n        if (wCell.x === cell.x && wCell.y === cell.y) {\n          return (cell.isWall = true);\n        }\n      });\n    });\n  });\n};\nexport const populateWithCoffee = (board, coffee) => {\n  board.forEach((row) => {\n    row.forEach((cell) => {\n      coffee.forEach((wCell) => {\n        if (wCell.x === cell.x && wCell.y === cell.y) {\n          return (cell.isCoffee = true);\n        }\n      });\n    });\n  });\n};\n\nexport const populateWithPeople = (board, people) => {\n  board.forEach((row) => {\n    row.forEach((cell) => {\n      people.forEach((p) => {\n        if (p.x === cell.x && p.y === cell.y) {\n          return (cell.isPeople = true);\n        }\n      });\n    });\n  });\n};\n\nexport const createBoard = (wall, people) => {\n  const b = createEmptyBoard();\n  populateWithWall(b, wall);\n  populateWithPeople(b, people);\n  return b;\n};\n\nexport const wall = [\n  { x: 0, y: 6 },\n  { x: 0, y: 7 },\n  { x: 1, y: 6 },\n  // { x: 6, y: 3 },\n  // { x: 3, y: 0 },\n  // { x: 3, y: 2 },\n  // { x: 3, y: 3 },\n];\n\nconst Board = () => {\n  const { users, setUsers } = useContext(UserContext);\n  const [board, setBoard] = useState(createBoard(wall, users));\n  const [userID, setUserID] = useState();\n  console.log(board);\n  console.log(users);\n  const socketRef = useRef();\n\n  useEffect(() => {\n    socketRef.current = io.connect('/');\n\n    socketRef.current.on('your id', (id) => {\n      setUserID(id);\n    });\n\n    socketRef.current.on('message', (message) => {});\n  }, []);\n\n  return <div className='board-container'>{drawBoard(board, users)}</div>;\n};\n\nexport default Board;\n","/Users/jean/Desktop/hackaton/client/src/components/Home/Upload.js",["44"],"import React, { useState, useContext } from 'react';\n/* import Modal from './Modal'; */\nimport './Upload.scss';\nimport axios from 'axios';\nimport { UserContext } from '../../context/UserContext';\nimport { Link } from 'react-router-dom';\n\nconst Upload = () => {\n  const [title, setTitle] = useState('Enter your Name');\n  const [mainPicture, setMainPicture] = useState(null);\n\n  const { users, setUsers } = useContext(UserContext);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append('title', title);\n    formData.append('main_picture', mainPicture);\n\n    const res = await axios.post(\n      'http://localhost:5000/uploaddufichier',\n      formData\n    );\n    await setUsers([\n      {\n        name: res.data.name,\n        avatar: `http://localhost:5000/${res.data.path}`,\n        x: Math.floor(Math.random() * 10),\n        y: Math.floor(Math.random() * 10),\n      },\n    ]);\n  };\n\n  return (\n    <div>\n      <h2>Welcome On Board !</h2>\n      <form onSubmit={handleSubmit}>\n        <input\n          type='text'\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n        />\n        <br />\n        <p>Select your picture</p>\n        <input\n          type='file'\n          onChange={(e) => setMainPicture(e.target.files[0])}\n        />\n        <br />\n        <input type='submit' value='Create Your Avatar' />\n        <p>how does it work ?</p>\n      </form>\n      <Link to='/board'>Join</Link>\n    </div>\n  );\n};\n\nexport default Upload;\n","/Users/jean/Desktop/hackaton/client/src/components/Board/Cell.js",["45","46","47"],"import React, { useContext } from 'react';\nimport avatar from '../../avatar.jpeg';\nimport { UserContext } from '../../context/UserContext';\n\nexport default function Cell(props) {\n  const { cellStyle, isPlayer, cell } = props;\n  const { users, setUsers } = useContext(UserContext);\n\n  const handleClick = (e) => {\n    console.log(e.target);\n    // const x = e.nativeEvent.clientX,\n    //   y = e.nativeEvent.clientY;\n    // setUsers({ x, y });\n  };\n\n  return (\n    <div className={cellStyle} onClick={handleClick}>\n      {isPlayer && (\n        <img\n          src={avatar}\n          alt='avatar'\n          // style={{\n          //   top: position.y,\n          //   left: position.left,\n          //   right: position.right,\n          //   position: 'absolute',\n          // }}\n        />\n      )}\n    </div>\n  );\n}\n",{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":2,"column":50,"nodeType":"54","messageId":"55","endLine":2,"endColumn":56},{"ruleId":"52","severity":1,"message":"56","line":111,"column":10,"nodeType":"54","messageId":"55","endLine":111,"endColumn":16},{"ruleId":"52","severity":1,"message":"57","line":111,"column":18,"nodeType":"54","messageId":"55","endLine":111,"endColumn":27},{"ruleId":"58","severity":1,"message":"59","line":169,"column":6,"nodeType":"60","endLine":169,"endColumn":8,"suggestions":"61"},{"ruleId":"52","severity":1,"message":"62","line":12,"column":11,"nodeType":"54","messageId":"55","endLine":12,"endColumn":16},{"ruleId":"52","severity":1,"message":"63","line":2,"column":8,"nodeType":"54","messageId":"55","endLine":2,"endColumn":14},{"ruleId":"52","severity":1,"message":"62","line":7,"column":11,"nodeType":"54","messageId":"55","endLine":7,"endColumn":16},{"ruleId":"52","severity":1,"message":"64","line":7,"column":18,"nodeType":"54","messageId":"55","endLine":7,"endColumn":26},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'userID' is assigned a value but never used.","'setUserID' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setUsers', 'socket', and 'users'. Either include them or remove the dependency array.","ArrayExpression",["67"],"'users' is assigned a value but never used.","'avatar' is defined but never used.","'setUsers' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"68","fix":"69"},"Update the dependencies array to be: [setUsers, socket, users]",{"range":"70","text":"71"},[3990,3992],"[setUsers, socket, users]"]